{
  "contractName": "MockProxyRegistry",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "proxies",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_proxyForAddress",
          "type": "address"
        }
      ],
      "name": "setProxy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"proxies\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_proxyForAddress\",\"type\":\"address\"}],\"name\":\"setProxy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A simple mock ProxyRegistry for use in local tests with minimal security\",\"methods\":{\"setProxy(address,address)\":{\"params\":{\"_address\":\"The address that the proxy will act on behalf of\",\"_proxyForAddress\":\"The proxy that will act on behalf of the address\"}},\"transferOwnership(address)\":{\"params\":{\"_newOwner\":\"Address of the new owner\"}}}},\"userdoc\":{\"methods\":{\"owner()\":{\"notice\":\"Returns the address of the owner.\"},\"setProxy(address,address)\":{\"notice\":\"Allow the owner to set a proxy for testing\"},\"transferOwnership(address)\":{\"notice\":\"Transfers the ownership of the contract to new address\"}}}},\"settings\":{\"compilationTarget\":{\"/C/Users/aggar/ERC1155/truffle-env/contracts/MockProxyRegistry.sol\":\"MockProxyRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/aggar/ERC1155/truffle-env/contracts/MockProxyRegistry.sol\":{\"keccak256\":\"0xbaacb228bde017b29d2b5543731f21f6ae10e2050342d2005f8416651bab3b55\",\"urls\":[\"bzz-raw://284c25a3988afb1529f4b90fdceff703d843d31b3ff55feb03eb9cc091937089\",\"dweb:/ipfs/QmQdMy4JyTcJF4n2WmaHJbMAKN6sMjjVTp15tZHnyUTV2j\"]},\"/C/Users/aggar/ERC1155/truffle-env/contracts/utils/Ownable.sol\":{\"keccak256\":\"0x412e1cb835a07a8dfbefa380b82fccb525ea1d44aa8d1c1ccdc96775ff8d3991\",\"urls\":[\"bzz-raw://69278e732f2d5c4c31d3dae0ce2afc781acf186f981f8a9498b93bf51f861da5\",\"dweb:/ipfs/QmVwwzAYhfC1QLA5qgCer3vm6nQMKNmw2DLvnoam6qFqbX\"]}},\"version\":1}",
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36105b8806100cf6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80638da5cb5b14610051578063a9d4630c1461009b578063c4552791146100ff578063f2fde38b14610183575b600080fd5b6100596101c7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100fd600480360360408110156100b157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101f0565b005b6101416004803603602081101561011557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610317565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101c56004803603602081101561019957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061034a565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610295576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061055e6026913960400191505060405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061055e6026913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610475576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180610534602a913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe4f776e61626c65237472616e736665724f776e6572736869703a20494e56414c49445f414444524553534f776e61626c65236f6e6c794f776e65723a2053454e4445525f49535f4e4f545f4f574e4552a265627a7a7231582012cd59e897420d77fd3bcbd9dda9ae05f26f7069346ad74ca7a98ce15bb02a1964736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80638da5cb5b14610051578063a9d4630c1461009b578063c4552791146100ff578063f2fde38b14610183575b600080fd5b6100596101c7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100fd600480360360408110156100b157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101f0565b005b6101416004803603602081101561011557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610317565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101c56004803603602081101561019957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061034a565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610295576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061055e6026913960400191505060405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061055e6026913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610475576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180610534602a913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe4f776e61626c65237472616e736665724f776e6572736869703a20494e56414c49445f414444524553534f776e61626c65236f6e6c794f776e65723a2053454e4445525f49535f4e4f545f4f574e4552a265627a7a7231582012cd59e897420d77fd3bcbd9dda9ae05f26f7069346ad74ca7a98ce15bb02a1964736f6c63430005100032",
  "sourceMap": "157:605:2:-;;;528:10:27;518:7;;:20;;;;;;;;;;;;;;;;;;583:7;;;;;;;;;;;550:41;;579:1;550:41;;;;;;;;;;;;157:605:2;;;;;;",
  "deployedSourceMap": "157:605:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;157:605:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1233:74:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;608:151:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;608:151:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;200:42;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;200:42:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;933:232:27;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;933:232:27;;;;;;;;;;;;;;;;;;;:::i;:::-;;1233:74;1271:7;1294;;;;;;;;;;;1287:14;;1233:74;:::o;608:151:2:-;732:7:27;;;;;;;;;;;718:21;;:10;:21;;;710:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;737:16:2;717:7;:17;725:8;717:17;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;608:151;;:::o;200:42::-;;;;;;;;;;;;;;;;;;;;;;:::o;933:232:27:-;732:7;;;;;;;;;;;718:21;;:10;:21;;;710:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1032:1;1011:23;;:9;:23;;;;1003:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1123:9;1093:40;;1114:7;;;;;;;;;;;1093:40;;;;;;;;;;;;1150:9;1140:7;;:19;;;;;;;;;;;;;;;;;;933:232;:::o",
  "source": "pragma solidity ^0.5.12;\r\n\r\n\r\nimport './utils/Ownable.sol';\r\n\r\n\r\n/**\r\n * @dev A simple mock ProxyRegistry for use in local tests with minimal security\r\n */\r\ncontract MockProxyRegistry is Ownable {\r\n  mapping(address => address) public proxies;\r\n\r\n\r\n  /***********************************|\r\n  |  Public Configuration Functions   |\r\n  |__________________________________*/\r\n\r\n  /**\r\n   * @notice Allow the owner to set a proxy for testing\r\n   * @param _address           The address that the proxy will act on behalf of\r\n   * @param _proxyForAddress  The proxy that will act on behalf of the address\r\n   */\r\n  function setProxy(address _address, address _proxyForAddress)\r\n      external\r\n      onlyOwner()\r\n  {\r\n      proxies[_address] = _proxyForAddress;\r\n  }\r\n}",
  "sourcePath": "C:\\Users\\aggar\\ERC1155\\truffle-env\\contracts\\MockProxyRegistry.sol",
  "ast": {
    "absolutePath": "/C/Users/aggar/ERC1155/truffle-env/contracts/MockProxyRegistry.sol",
    "exportedSymbols": {
      "MockProxyRegistry": [
        494
      ]
    },
    "id": 495,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 470,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/C/Users/aggar/ERC1155/truffle-env/contracts/utils/Ownable.sol",
        "file": "./utils/Ownable.sol",
        "id": 471,
        "nodeType": "ImportDirective",
        "scope": 495,
        "sourceUnit": 4553,
        "src": "30:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 472,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4552,
              "src": "187:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$4552",
                "typeString": "contract Ownable"
              }
            },
            "id": 473,
            "nodeType": "InheritanceSpecifier",
            "src": "187:7:2"
          }
        ],
        "contractDependencies": [
          4552
        ],
        "contractKind": "contract",
        "documentation": "@dev A simple mock ProxyRegistry for use in local tests with minimal security",
        "fullyImplemented": true,
        "id": 494,
        "linearizedBaseContracts": [
          494,
          4552
        ],
        "name": "MockProxyRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 477,
            "name": "proxies",
            "nodeType": "VariableDeclaration",
            "scope": 494,
            "src": "200:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 476,
              "keyType": {
                "id": 474,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "208:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "200:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 475,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "219:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 492,
              "nodeType": "Block",
              "src": "708:51:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 486,
                        "name": "proxies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 477,
                        "src": "717:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 488,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 487,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 479,
                        "src": "725:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "717:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 489,
                      "name": "_proxyForAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 481,
                      "src": "737:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "717:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 491,
                  "nodeType": "ExpressionStatement",
                  "src": "717:36:2"
                }
              ]
            },
            "documentation": "@notice Allow the owner to set a proxy for testing\n@param _address           The address that the proxy will act on behalf of\n@param _proxyForAddress  The proxy that will act on behalf of the address",
            "id": 493,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 484,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 483,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4517,
                  "src": "693:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "693:11:2"
              }
            ],
            "name": "setProxy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 479,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 493,
                  "src": "626:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 478,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "626:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 481,
                  "name": "_proxyForAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 493,
                  "src": "644:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 480,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "644:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "625:44:2"
            },
            "returnParameters": {
              "id": 485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "708:0:2"
            },
            "scope": 494,
            "src": "608:151:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 495,
        "src": "157:605:2"
      }
    ],
    "src": "0:762:2"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/aggar/ERC1155/truffle-env/contracts/MockProxyRegistry.sol",
    "exportedSymbols": {
      "MockProxyRegistry": [
        494
      ]
    },
    "id": 495,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 470,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/C/Users/aggar/ERC1155/truffle-env/contracts/utils/Ownable.sol",
        "file": "./utils/Ownable.sol",
        "id": 471,
        "nodeType": "ImportDirective",
        "scope": 495,
        "sourceUnit": 4553,
        "src": "30:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 472,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4552,
              "src": "187:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$4552",
                "typeString": "contract Ownable"
              }
            },
            "id": 473,
            "nodeType": "InheritanceSpecifier",
            "src": "187:7:2"
          }
        ],
        "contractDependencies": [
          4552
        ],
        "contractKind": "contract",
        "documentation": "@dev A simple mock ProxyRegistry for use in local tests with minimal security",
        "fullyImplemented": true,
        "id": 494,
        "linearizedBaseContracts": [
          494,
          4552
        ],
        "name": "MockProxyRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 477,
            "name": "proxies",
            "nodeType": "VariableDeclaration",
            "scope": 494,
            "src": "200:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 476,
              "keyType": {
                "id": 474,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "208:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "200:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 475,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "219:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 492,
              "nodeType": "Block",
              "src": "708:51:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 486,
                        "name": "proxies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 477,
                        "src": "717:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 488,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 487,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 479,
                        "src": "725:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "717:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 489,
                      "name": "_proxyForAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 481,
                      "src": "737:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "717:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 491,
                  "nodeType": "ExpressionStatement",
                  "src": "717:36:2"
                }
              ]
            },
            "documentation": "@notice Allow the owner to set a proxy for testing\n@param _address           The address that the proxy will act on behalf of\n@param _proxyForAddress  The proxy that will act on behalf of the address",
            "id": 493,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 484,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 483,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4517,
                  "src": "693:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "693:11:2"
              }
            ],
            "name": "setProxy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 479,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 493,
                  "src": "626:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 478,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "626:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 481,
                  "name": "_proxyForAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 493,
                  "src": "644:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 480,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "644:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "625:44:2"
            },
            "returnParameters": {
              "id": 485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "708:0:2"
            },
            "scope": 494,
            "src": "608:151:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 495,
        "src": "157:605:2"
      }
    ],
    "src": "0:762:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x93308B65509fC81a8b388B2ba5dC0108285Ea58C",
      "transactionHash": "0xaaabc124564d97851a6d03a95b967676ab9d3c7f5999cb348512c8e4c9a3f248"
    }
  },
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-05-19T21:47:03.597Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "A simple mock ProxyRegistry for use in local tests with minimal security",
    "methods": {
      "setProxy(address,address)": {
        "params": {
          "_address": "The address that the proxy will act on behalf of",
          "_proxyForAddress": "The proxy that will act on behalf of the address"
        }
      },
      "transferOwnership(address)": {
        "params": {
          "_newOwner": "Address of the new owner"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "owner()": {
        "notice": "Returns the address of the owner."
      },
      "setProxy(address,address)": {
        "notice": "Allow the owner to set a proxy for testing"
      },
      "transferOwnership(address)": {
        "notice": "Transfers the ownership of the contract to new address"
      }
    }
  }
}