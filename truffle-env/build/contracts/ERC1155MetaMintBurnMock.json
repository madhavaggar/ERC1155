{
  "contractName": "ERC1155MetaMintBurnMock",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newNonce",
          "type": "uint256"
        }
      ],
      "name": "NonceChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_owners",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        }
      ],
      "name": "getNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOperator",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_signerAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_sig",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValid",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bool",
          "name": "_isGasFee",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "metaSafeBatchTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isGasFee",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "metaSafeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_isGasFee",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "metaSetApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "mintMock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "batchMintMock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burnMock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_values",
          "type": "uint256[]"
        }
      ],
      "name": "batchBurnMock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newNonce\",\"type\":\"uint256\"}],\"name\":\"NonceChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"batchBurnMock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"batchMintMock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnMock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOperator\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signerAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"_isGasFee\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"metaSafeBatchTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isGasFee\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"metaSafeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_isGasFee\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"metaSetApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"mintMock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"balanceOf(address,uint256)\":{\"params\":{\"_id\":\"ID of the Token\",\"_owner\":\"The address of the token holder\"},\"return\":\"The _owner's balance of the Token type requested\"},\"balanceOfBatch(address[],uint256[])\":{\"params\":{\"_ids\":\"ID of the Tokens\",\"_owners\":\"The addresses of the token holders\"},\"return\":\"The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)\"},\"batchBurnMock(address,uint256[],uint256[])\":{\"details\":\"burn _value of tokens of a given token id\",\"params\":{\"_from\":\"The address to burn tokens from.\",\"_ids\":\"Array of token ids to burn\",\"_values\":\"Array of the amount to be burned\"}},\"batchMintMock(address,uint256[],uint256[],bytes)\":{\"details\":\"Mint tokens for each ids in _ids\",\"params\":{\"_data\":\"Data to be passed if receiver is contract\",\"_ids\":\"Array of ids to mint\",\"_to\":\"The address to mint tokens to.\",\"_values\":\"Array of amount of tokens to mint per id\"}},\"burnMock(address,uint256,uint256)\":{\"details\":\"burn _value of tokens of a given token id\",\"params\":{\"_from\":\"The address to burn tokens from.\",\"_id\":\"token id to burn\",\"_value\":\"The amount to be burned\"}},\"getNonce(address)\":{\"params\":{\"_signer\":\"Address to query signature nonce for\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"Address of authorized operator\",\"_owner\":\"The owner of the Tokens\"},\"return\":\"True if the operator is approved, false if not\"},\"isValidSignature(address,bytes32,bytes,bytes)\":{\"details\":\"Verifies that a hash has been signed by the given signer.\",\"params\":{\"_data\":\"Full EIP-712 data structure that was hashed and signed\",\"_hash\":\"Hash of the EIP-712 encoded data\",\"_sig\":\"Proof that the hash has been signed by signer.     For non wallet signatures, _sig is expected to be an array tightly encoded as     (bytes32 r, bytes32 s, uint8 v, uint256 nonce, SignatureType sigType)\",\"_signerAddress\":\"Address that should have signed the given hash.\"},\"return\":\"True if the address recovered from the provided signature matches the input signer address.\"},\"metaSafeBatchTransferFrom(address,address,uint256[],uint256[],bool,bytes)\":{\"params\":{\"_amounts\":\"Transfer amounts per token type\",\"_data\":\"Encodes a meta transfer indicator, signature, gas payment receipt and extra transfer data  _data should be encoded as (  (bytes32 r, bytes32 s, uint8 v, uint256 nonce, SignatureType sigType),  (GasReceipt g, ?bytes transferData) )  i.e. high level encoding should be (bytes, bytes), where the latter bytes array is a nested bytes array\",\"_from\":\"Source addresses\",\"_ids\":\"IDs of each token type\",\"_isGasFee\":\"Whether gas is reimbursed to executor or not\",\"_to\":\"Target addresses\"}},\"metaSafeTransferFrom(address,address,uint256,uint256,bool,bytes)\":{\"params\":{\"_amount\":\"Transfered amount\",\"_data\":\"Encodes a meta transfer indicator, signature, gas payment receipt and extra transfer data  _data should be encoded as (  (bytes32 r, bytes32 s, uint8 v, uint256 nonce, SignatureType sigType),  (GasReceipt g, ?bytes transferData) )  i.e. high level encoding should be (bytes, bytes), where the latter bytes array is a nested bytes array\",\"_from\":\"Source address\",\"_id\":\"ID of the token type\",\"_isGasFee\":\"Whether gas is reimbursed to executor or not\",\"_to\":\"Target address\"}},\"metaSetApprovalForAll(address,address,bool,bool,bytes)\":{\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_data\":\"Encodes signature and gas payment receipt  _data should be encoded as (    (bytes32 r, bytes32 s, uint8 v, uint256 nonce, SignatureType sigType),    (GasReceipt g)  )  i.e. high level encoding should be (bytes, bytes), where the latter bytes array is a nested bytes array\",\"_isGasFee\":\"Whether gas will be reimbursed or not, with vlid signature\",\"_operator\":\"Address to add to the set of authorized operators\",\"_owner\":\"Address that wants to set operator status  _spender\"}},\"mintMock(address,uint256,uint256,bytes)\":{\"details\":\"Mint _value of tokens of a given id\",\"params\":{\"_data\":\"Data to be passed if receiver is contract\",\"_id\":\"token id to mint\",\"_to\":\"The address to mint tokens to.\",\"_value\":\"The amount to be minted\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"params\":{\"_amounts\":\"Transfer amounts per token type\",\"_data\":\"Additional data with no specified format, sent in call to `_to`\",\"_from\":\"Source addresses\",\"_ids\":\"IDs of each token type\",\"_to\":\"Target addresses\"}},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"params\":{\"_amount\":\"Transfered amount\",\"_data\":\"Additional data with no specified format, sent in call to `_to`\",\"_from\":\"Source address\",\"_id\":\"ID of the token type\",\"_to\":\"Target address\"}},\"setApprovalForAll(address,bool)\":{\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"return\":\"`true` if the contract implements `_interfaceID` and\"},\"uri(uint256)\":{\"details\":\"URIs are defined in RFC 3986.     URIs are assumed to be deterministically generated based on token ID     Token IDs are assumed to be represented in their hex format in URIs\",\"return\":\"URI string\"}}},\"userdoc\":{\"methods\":{\"balanceOf(address,uint256)\":{\"notice\":\"Get the balance of an account's Tokens\"},\"balanceOfBatch(address[],uint256[])\":{\"notice\":\"Get the balance of multiple account/token pairs\"},\"getNonce(address)\":{\"notice\":\"Returns the current nonce associated with a given address\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given owner\"},\"metaSafeBatchTransferFrom(address,address,uint256[],uint256[],bool,bytes)\":{\"notice\":\"Allows anyone with a valid signature to transfer multiple types of tokens on the bahalf of _from\"},\"metaSafeTransferFrom(address,address,uint256,uint256,bool,bytes)\":{\"notice\":\"Allows anyone with a valid signature to transfer _amount amount of a token _id on the bahalf of _from\"},\"metaSetApprovalForAll(address,address,bool,bool,bytes)\":{\"notice\":\"Approve the passed address to spend on behalf of _from if valid signature is provided\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"notice\":\"Send multiple types of Tokens from the _from address to the _to address (with safety call)\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"notice\":\"Transfers amount amount of an _id from the _from address to the _to address specified\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage all of caller's tokens\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"uri(uint256)\":{\"notice\":\"A distinct Uniform Resource Identifier (URI) for a given token.\"}}}},\"settings\":{\"compilationTarget\":{\"/C/Users/aggar/ERC1155/truffle-env/contracts/mocks/ERC1155MetaMintBurnMock.sol\":\"ERC1155MetaMintBurnMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/aggar/ERC1155/truffle-env/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0x13c59845e00020a273411fffa78885ef42ee5dc2db66c0808fde3f3938cb465d\",\"urls\":[\"bzz-raw://a1525eb831cd6b6a552cfe4a0d5b9d0fe3bd684cb3d2420499ea8f551617913a\",\"dweb:/ipfs/Qmcf8R6o7Pg2eirCUL4J6JRc5unwX9Jj8q9T1KQSNtBh2D\"]},\"/C/Users/aggar/ERC1155/truffle-env/contracts/interfaces/IERC1155TokenReceiver.sol\":{\"keccak256\":\"0x76fe19b4df83bd56345deaf96ea9c7f151c3387dc470a3d66e4a53caac111200\",\"urls\":[\"bzz-raw://41f8585e0eb5b125a2a63ba815456ab06530232c08c2505b54967b28d58b4dad\",\"dweb:/ipfs/QmVZQtfqkiLbvH1wer4vxYBth1uCmvG8oTdMtv9DE2UeNm\"]},\"/C/Users/aggar/ERC1155/truffle-env/contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x93caa576f320e6f8b9b9a0a22a3d42d04a52b24b06e99298f9f3467bc7eb2002\",\"urls\":[\"bzz-raw://e84dd61effe631dd63eeceeb71a109dd68da11b34ca2a3c976c81ebbb3018396\",\"dweb:/ipfs/QmZthuYYyNC4LDu2sVhWVZsGQr6RWLdjvBUuLuS1mxpuHp\"]},\"/C/Users/aggar/ERC1155/truffle-env/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xe6dff29b883da953c7489539bee37eb972250cec4aaae26b31dffa4f89a5573a\",\"urls\":[\"bzz-raw://d52146096f8ba4bb6a4c41a9925722c2a6b8e0e3ea2ebf6e46976795f5418078\",\"dweb:/ipfs/QmcK4r5tmHH88zX31LwMC15CWBYceyV27i3fjSapoWqPqn\"]},\"/C/Users/aggar/ERC1155/truffle-env/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x376332b2b54a298acd9a33ab15cc99e828515505c0ba8617c7a4f0feb7c846a0\",\"urls\":[\"bzz-raw://3dd434d4f42b804bd0ec3fe6a63f42430d723c888ab774020a0daf98cf5ff9ba\",\"dweb:/ipfs/QmYqGg4XU8GAiQP7n3yhyTtdJqmjiBEL7PsTjyWbZi7JSZ\"]},\"/C/Users/aggar/ERC1155/truffle-env/contracts/mocks/ERC1155MetaMintBurnMock.sol\":{\"keccak256\":\"0xe097fa82455bb32c2d9d9c85a69e109bedc7f0180462577f3a16bf4d78ed6757\",\"urls\":[\"bzz-raw://4044f45df655a8428b39766fe44571b252d3ec3a476d88b81b1bd4b3093b9767\",\"dweb:/ipfs/QmVLcxC7N9h9yVyFb94b81iRW41gEHxKpGMzMDQmxjhQ62\"]},\"/C/Users/aggar/ERC1155/truffle-env/contracts/tokens/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x18ff08a7f49b82ef8723c1025d9e609e4d2f663f3da166c37e2c24d99a3936ee\",\"urls\":[\"bzz-raw://e5cb854110496f66cf5bfed2bd18da4d26ed7c26048db7a3468b7db7e76701de\",\"dweb:/ipfs/QmXYgni5rQT6c3meL4RAXsBV5QpEBqZ4ZwLNJutYbfrTLM\"]},\"/C/Users/aggar/ERC1155/truffle-env/contracts/tokens/ERC1155/ERC1155Meta.sol\":{\"keccak256\":\"0x82797e80bbea4c4f40479e796621a7f9371d0173f423458bccbc90c0cb929106\",\"urls\":[\"bzz-raw://ad2ebeae42a076a2bc7d82d9c3bb05112eb384695cc41df1758a9361a73db1e3\",\"dweb:/ipfs/QmTrs1Zg6nXQrjqiJKnuv8SEQWAzVNjQGJRv5GQFg86RdK\"]},\"/C/Users/aggar/ERC1155/truffle-env/contracts/tokens/ERC1155/ERC1155Metadata.sol\":{\"keccak256\":\"0xd4ec01a2709c44d665f06df9e09e24c15d2b815f4f69c0d53992e4b6d780dfb0\",\"urls\":[\"bzz-raw://8989b5a135e5c5d48a1b3ff66b468c557c422195b1f0ac57c4ab859e40956c0e\",\"dweb:/ipfs/Qmf86iqy26Ni4K4bZJCTELMgsHgBkm14QeRjtba6Hm5Ntz\"]},\"/C/Users/aggar/ERC1155/truffle-env/contracts/tokens/ERC1155/ERC1155MintBurn.sol\":{\"keccak256\":\"0x10a0714b4abea72d606b6760cb8bf9e5e7f815888511e1b39c5bfa5d85f7c6a6\",\"urls\":[\"bzz-raw://de768a1f48e4f4bcb14a312b8fcf3757e42ece81cbfa6d07ed6f15fdcba4de9f\",\"dweb:/ipfs/QmZnr3ZRtQyhmAGhSjqX4yQqLbUHg7E98JoxeQnTXM22Hq\"]},\"/C/Users/aggar/ERC1155/truffle-env/contracts/utils/Address.sol\":{\"keccak256\":\"0x9247e8de08b3985216201dabe21ef3afbc50dbd9602daab82b145304624397a0\",\"urls\":[\"bzz-raw://77f053a1ee7e95ce10847881bf1a74d4de795d448da5de720b71cac57a9cef41\",\"dweb:/ipfs/QmNMteK6wnXYWXw8hAp8PdU412JRq6Se99huAs4YarmcJF\"]},\"/C/Users/aggar/ERC1155/truffle-env/contracts/utils/LibBytes.sol\":{\"keccak256\":\"0x27a5f227e9947799320408642f4628537bd080a98d0575fb874d6786244641a6\",\"urls\":[\"bzz-raw://557fd5b3134bc1df3d6ed9caeb60304e084a90f030662fed67359c0c4f535a77\",\"dweb:/ipfs/QmVyA5sd6Rg8URhsTPHmEEevncjYBHmHXpCor62kzp6R2P\"]},\"/C/Users/aggar/ERC1155/truffle-env/contracts/utils/LibEIP712.sol\":{\"keccak256\":\"0x5b0fe5b76665d483fb7d9ff468cdf4a01db99344c11231e98545b6f14c7db0d1\",\"urls\":[\"bzz-raw://16b843fb855f62a5a1fefe702f8feb6f4b7803605dfe284464d25be24b93236a\",\"dweb:/ipfs/QmQbZdJsbYeBwM5NSsJmh4UtXVYazU6tnCMr3tvCadpWn4\"]},\"/C/Users/aggar/ERC1155/truffle-env/contracts/utils/SafeMath.sol\":{\"keccak256\":\"0x29e06dffe4857ff71180bab9752abe32d596252cdb573cf4ecd8381a3de4bda3\",\"urls\":[\"bzz-raw://b55398f260a0b97e38fbc1a770651b3609baee722ebeb252936095c7609a9334\",\"dweb:/ipfs/QmfLLW5ZWxNZkARC2gwxVjHnPVYTYy6dnDuao57986WfH5\"]},\"/C/Users/aggar/ERC1155/truffle-env/contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0xf83218d6f2dd3afb1c97e2bd01e8453e02c77a56b6addd4985aeac181b6167ec\",\"urls\":[\"bzz-raw://ec8958768051b73427bccffb9f033cce909de61161235f46c53ea177cf797e6d\",\"dweb:/ipfs/QmdpcTH9LE8b5WSJgnC61gyGdMTrjykDbydeA9Kjbpcedj\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50615218806100206000396000f3fe608060405234801561001057600080fd5b506004361061010a5760003560e01c8063a3d4926e116100a2578063d7a0ad9011610071578063d7a0ad90146102f9578063e985e9c514610315578063f242432a14610345578063f5d4c82014610361578063fa4e12d71461037d5761010a565b8063a3d4926e14610289578063a3f091f5146102a5578063bd7a6c41146102c1578063ce0b514b146102dd5761010a565b80632eb2c2d6116100de5780632eb2c2d614610205578063437ecbe9146102215780634e1273f41461023d578063a22cb4651461026d5761010a565b8062fdd58e1461014557806301ffc9a7146101755780630e89341c146101a55780632d0335ab146101d5575b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013c90614c86565b60405180910390fd5b61015f600480360361015a91908101906134fe565b6103ad565b60405161016c9190614e46565b60405180910390f35b61018f600480360361018a9190810190613699565b610407565b60405161019c91906148df565b60405180910390f35b6101bf60048036036101ba9190810190613804565b6104b8565b6040516101cc9190614ae4565b60405180910390f35b6101ef60048036036101ea9190810190612eec565b6104ec565b6040516101fc9190614e46565b60405180910390f35b61021f600480360361021a9190810190613087565b610535565b005b61023b6004803603610236919081019061353a565b610645565b005b61025760048036036102529190810190613604565b610655565b6040516102649190614886565b60405180910390f35b6102876004803603610282919081019061342f565b610785565b005b6102a3600480360361029e9190810190612fb6565b610882565b005b6102bf60048036036102ba9190810190613589565b610a20565b005b6102db60048036036102d69190810190613305565b610a32565b005b6102f760048036036102f291908101906131d5565b610a42565b005b610313600480360361030e9190810190613384565b610b94565b005b61032f600480360361032a9190810190612f7a565b610ba6565b60405161033c91906148df565b60405180910390f35b61035f600480360361035a9190810190613276565b610c3a565b005b61037b60048036036103769190810190613146565b610d4a565b005b6103976004803603610392919081019061346b565b610ef0565b6040516103a491906148df565b60405180910390f35b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b60006301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104a0575063d9b67a2660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b156104ae57600190506104b3565b600090505b919050565b606060036104c58361155e565b6040516020016104d69291906146e0565b6040516020818303038152906040529050919050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061057557506105748533610ba6565b5b6105b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ab90614d06565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610624576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061b90614c46565b60405180910390fd5b61063085858585611691565b61063e858585855a86611958565b5050505050565b610650838383611aa6565b505050565b6060815183511461069b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069290614ca6565b60405180910390fd5b606083516040519080825280602002602001820160405280156106cd5781602001602082028038833980820191505090505b50905060008090505b845181101561077a576000808683815181106106ee57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085838151811061073e57fe5b602002602001015181526020019081526020016000205482828151811061076157fe5b60200260200101818152505080806001019150506106d6565b508091505092915050565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161087691906148df565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614156108f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e990614d66565b60405180910390fd5b60606108fc612ba2565b60606109af89857fa3d4926e8cf8fe8e020cd29f514c256bc2eec62aa2337e415f1a33a4828af5a060001b8c8c8c60405160200161093a9190614622565b604051602081830303815290604052805190602001208c6040516020016109619190614622565b604051602081830303815290604052805190602001208c610983576000610986565b60015b60405160200161099b96959493929190614923565b604051602081830303815290604052611bdf565b90506109bd89898989611691565b8415610a0657808060200190516109d79190810190613798565b81915080905080945081935050506109f789898989866020015186611958565b610a018983611e0c565b610a15565b610a14898989895a86611958565b5b505050505050505050565b610a2c848484846120e7565b50505050565b610a3d838383612230565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610ab2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa990614bc6565b60405180910390fd5b6060610abc612ba2565b6060610b2389857fce0b514b3931bdbe4d5d44e4f035afe7113767b7db71949271f6a62d9c60f55860001b8c8c8c8c8c610af7576000610afa565b60015b604051602001610b0f969594939291906149d7565b604051602081830303815290604052611bdf565b9050610b3189898989612408565b8415610b7a5780806020019051610b4b9190810190613798565b8191508090508094508193505050610b6b898989898660200151866125f6565b610b758983611e0c565b610b89565b610b88898989895a866125f6565b5b505050505050505050565b610ba084848484612744565b50505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610c7a5750610c798533610ba6565b5b610cb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb090614b46565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610d29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2090614b06565b60405180910390fd5b610d3585858585612408565b610d43858585855a866125f6565b5050505050565b6060610dbd86837ff5d4c820494c8595de274c7ff619bead38aac4fbc3d143b5bf956aa4b84fa52460001b898989610d83576000610d86565b60015b89610d92576000610d95565b60015b604051602001610da9959493929190614984565b604051602081830303815290604052611bdf565b905083600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3186604051610eb091906148df565b60405180910390a38215610ee857610ec6612ba2565b81806020019051610eda9190810190613757565b9050610ee68782611e0c565b505b505050505050565b600080825111610f35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2c90614d26565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610fa5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9c90614ce6565b60405180910390fd5b6000610fb08361292d565b60f81c9050600580811115610fc157fe5b60ff168160ff1610611008576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fff90614ba6565b60405180910390fd5b60008160ff16600581111561101957fe5b90506000806000806000600581111561102e57fe5b85600581111561103a57fe5b141561107b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107290614be6565b60405180910390fd5b6001600581111561108857fe5b85600581111561109457fe5b14156111b75760618851146110de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d590614c26565b60405180910390fd5b6110f26000896129a090919063ffffffff16565b92506111086020896129a090919063ffffffff16565b91508760408151811061111757fe5b602001015160f81c60f81b60f81c935060018a8585856040516000815260200160405260405161114a9493929190614a68565b6020604051602081039080840390855afa15801561116c573d6000803e3d6000fd5b5050506020604051035190508073ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff16149650869650505050505050611556565b600260058111156111c457fe5b8560058111156111d057fe5b141561131957606188511461121a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121190614c26565b60405180910390fd5b61122e6000896129a090919063ffffffff16565b92506112446020896129a090919063ffffffff16565b91508760408151811061125357fe5b602001015160f81c60f81b60f81c935060018a604051602001611276919061470f565b60405160208183030381529060405280519060200120858585604051600081526020016040526040516112ac9493929190614a68565b6020604051602081039080840390855afa1580156112ce573d6000803e3d6000fd5b5050506020604051035190508073ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff16149650869650505050505050611556565b6003600581111561132657fe5b85600581111561133257fe5b141561141a578a73ffffffffffffffffffffffffffffffffffffffff166320c13b0b8a8a6040518363ffffffff1660e01b8152600401611373929190614aad565b60206040518083038186803b15801561138b57600080fd5b505afa15801561139f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113c391908101906136c2565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166320c13b0b60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149650869650505050505050611556565b6004600581111561142757fe5b85600581111561143357fe5b141561151b578a73ffffffffffffffffffffffffffffffffffffffff16631626ba7e8b8a6040518363ffffffff1660e01b8152600401611474929190614a38565b60206040518083038186803b15801561148c57600080fd5b505afa1580156114a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114c491908101906136c2565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916631626ba7e60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149650869650505050505050611556565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154d90614ba6565b60405180910390fd5b949350505050565b606060008214156115a6576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061168c565b6000829050600083905060005b600083146115d5578080600101915050600a83816115cd57fe5b0492506115b3565b6060816040519080825280601f01601f19166020018201604052801561160a5781602001600182028038833980820191505090505b50905060006001830390505b6000841461168357600a848161162857fe5b0660300160f81b8282806001900393508151811061164257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a848161167b57fe5b049350611616565b81955050505050505b919050565b80518251146116d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116cc90614b86565b60405180910390fd5b60008251905060008090505b818110156118d2576117718382815181106116f857fe5b60200260200101516000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087858151811061174c57fe5b60200260200101518152602001908152602001600020546129fe90919063ffffffff16565b6000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008684815181106117bd57fe5b602002602001015181526020019081526020016000208190555061185f8382815181106117e657fe5b60200260200101516000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087858151811061183a57fe5b6020026020010151815260200190815260200160002054612a5490919063ffffffff16565b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008684815181106118ab57fe5b602002602001015181526020019081526020016000208190555080806001019150506116e1565b508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516119499291906148a8565b60405180910390a45050505050565b6119778573ffffffffffffffffffffffffffffffffffffffff16612aa9565b15611a9e5760008573ffffffffffffffffffffffffffffffffffffffff1663bc197c8184338a8989886040518763ffffffff1660e01b81526004016119c0959493929190614735565b602060405180830381600088803b1580156119da57600080fd5b5087f11580156119ee573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250611a1391908101906136c2565b905063bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611a9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a9390614d86565b60405180910390fd5b505b505050505050565b611b08816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020546129fe90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051611bd2929190614e61565b60405180910390a4505050565b60608083806020019051611bf691908101906136eb565b81915080905080935081925050506000600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000611c5e6041846129a090919063ffffffff16565b60001c9050818110158015611c7557506064820181105b611cb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cab90614e06565b60405180910390fd5b6000611cf086838780519060200120604051602001611cd593929190614639565b60405160208183030381529060405280519060200120612aee565b90506060868387604051602001611d0993929190614672565b604051602081830303815290604052905060018301600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508873ffffffffffffffffffffffffffffffffffffffff167fb861b7bdbe611a846ab271b8d2810391bc8b5a968f390c322438ecab66bccf5960018501604051611daa9190614e46565b60405180910390a2611dbe89838388610ef0565b611dfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611df490614c06565b60405180910390fd5b85955050505050509392505050565b6000611e1b826060015161292d565b60f81c9050600280811115611e2c57fe5b60ff168160ff1610611e73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e6a90614e26565b60405180910390fd5b60008160ff166002811115611e8457fe5b905060008060008086600001519050600073ffffffffffffffffffffffffffffffffffffffff16876040015173ffffffffffffffffffffffffffffffffffffffff1614611ed5578660400151611ed7565b335b925060006002811115611ee657fe5b856002811115611ef257fe5b1415611ff4578660600151806020019051611f109190810190612f3e565b81915080935081955050503073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611f7d57611f5b88848484612408565b611f788884845a85604051806020016040528060008152506125f6565b611fef565b8373ffffffffffffffffffffffffffffffffffffffff1663f242432a898585856040518563ffffffff1660e01b8152600401611fbc949392919061482e565b600060405180830381600087803b158015611fd657600080fd5b505af1158015611fea573d6000803e3d6000fd5b505050505b6120dd565b866060015180602001905161200c9190810190612f15565b93508373ffffffffffffffffffffffffffffffffffffffff166323b872dd8985846040518463ffffffff1660e01b815260040161204b939291906147f7565b602060405180830381600087803b15801561206557600080fd5b505af1158015612079573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061209d9190810190613670565b6120dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120d390614cc6565b60405180910390fd5b5b5050505050505050565b612149826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002054612a5490919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628686604051612213929190614e61565b60405180910390a461222a60008585855a866125f6565b50505050565b60008251905081518114612279576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161227090614c66565b60405180910390fd5b60008090505b818110156123825761230f83828151811061229657fe5b60200260200101516000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008785815181106122ea57fe5b60200260200101518152602001908152602001600020546129fe90919063ffffffff16565b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086848151811061235b57fe5b6020026020010151815260200190815260200160002081905550808060010191505061227f565b50600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516123fa9291906148a8565b60405180910390a450505050565b61246a816000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020546129fe90919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000208190555061251f816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054612a5490919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516125e8929190614e61565b60405180910390a450505050565b6126158573ffffffffffffffffffffffffffffffffffffffff16612aa9565b1561273c5760008573ffffffffffffffffffffffffffffffffffffffff1663f23a6e6184338a8989886040518763ffffffff1660e01b815260040161265e95949392919061479d565b602060405180830381600088803b15801561267857600080fd5b5087f115801561268c573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052506126b191908101906136c2565b905063f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461273a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161273190614da6565b60405180910390fd5b505b505050505050565b8151835114612788576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161277f90614d46565b60405180910390fd5b60008351905060008090505b81811015612897576128248482815181106127ab57fe5b60200260200101516000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008885815181106127ff57fe5b6020026020010151815260200190815260200160002054612a5490919063ffffffff16565b6000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087848151811061287057fe5b60200260200101518152602001908152602001600020819055508080600101915050612794565b508473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161290f9291906148a8565b60405180910390a461292660008686865a87611958565b5050505050565b600080825111612972576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161296990614b26565b60405180910390fd5b8160018351038151811061298257fe5b602001015160f81c60f81b9050600182510380835250809050919050565b600060208201835110156129e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129e090614dc6565b60405180910390fd5b60208201915081830151905080905092915050565b600082821115612a43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a3a90614b66565b60405180910390fd5b600082840390508091505092915050565b600080828401905083811015612a9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a9690614de6565b60405180910390fd5b8091505092915050565b600080823f90506000801b8114158015612ae657507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b8114155b915050919050565b60006040518060400160405280600281526020017f19010000000000000000000000000000000000000000000000000000000000008152507f035aff83d86937d35b32e04f0ddc6ff469290eef2f1b692d8a815c89404d474960001b30604051602001612b5c9291906148fa565b6040516020818303038152906040528051906020012083604051602001612b85939291906146a7565b604051602081830303815290604052805190602001209050919050565b60405180608001604052806000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b600081359050612bef8161514b565b92915050565b600081519050612c048161514b565b92915050565b600081519050612c1981615162565b92915050565b600082601f830112612c3057600080fd5b8135612c43612c3e82614eb7565b614e8a565b91508181835260208401935060208101905083856020840282011115612c6857600080fd5b60005b83811015612c985781612c7e8882612be0565b845260208401935060208301925050600181019050612c6b565b5050505092915050565b600082601f830112612cb357600080fd5b8135612cc6612cc182614edf565b614e8a565b91508181835260208401935060208101905083856020840282011115612ceb57600080fd5b60005b83811015612d1b5781612d018882612ec2565b845260208401935060208301925050600181019050612cee565b5050505092915050565b600081359050612d3481615179565b92915050565b600081519050612d4981615179565b92915050565b600081359050612d5e81615190565b92915050565b600081359050612d73816151a7565b92915050565b600081519050612d88816151a7565b92915050565b600082601f830112612d9f57600080fd5b8151612db2612dad82614f07565b614e8a565b91508082526020830160208301858383011115612dce57600080fd5b612dd98382846150f3565b50505092915050565b600082601f830112612df357600080fd5b8135612e06612e0182614f33565b614e8a565b91508082526020830160208301858383011115612e2257600080fd5b612e2d8382846150e4565b50505092915050565b600060808284031215612e4857600080fd5b612e526080614e8a565b90506000612e6284828501612ed7565b6000830152506020612e7684828501612ed7565b6020830152506040612e8a84828501612bf5565b604083015250606082015167ffffffffffffffff811115612eaa57600080fd5b612eb684828501612d8e565b60608301525092915050565b600081359050612ed1816151be565b92915050565b600081519050612ee6816151be565b92915050565b600060208284031215612efe57600080fd5b6000612f0c84828501612be0565b91505092915050565b600060208284031215612f2757600080fd5b6000612f3584828501612c0a565b91505092915050565b60008060408385031215612f5157600080fd5b6000612f5f85828601612c0a565b9250506020612f7085828601612ed7565b9150509250929050565b60008060408385031215612f8d57600080fd5b6000612f9b85828601612be0565b9250506020612fac85828601612be0565b9150509250929050565b60008060008060008060c08789031215612fcf57600080fd5b6000612fdd89828a01612be0565b9650506020612fee89828a01612be0565b955050604087013567ffffffffffffffff81111561300b57600080fd5b61301789828a01612ca2565b945050606087013567ffffffffffffffff81111561303457600080fd5b61304089828a01612ca2565b935050608061305189828a01612d25565b92505060a087013567ffffffffffffffff81111561306e57600080fd5b61307a89828a01612de2565b9150509295509295509295565b600080600080600060a0868803121561309f57600080fd5b60006130ad88828901612be0565b95505060206130be88828901612be0565b945050604086013567ffffffffffffffff8111156130db57600080fd5b6130e788828901612ca2565b935050606086013567ffffffffffffffff81111561310457600080fd5b61311088828901612ca2565b925050608086013567ffffffffffffffff81111561312d57600080fd5b61313988828901612de2565b9150509295509295909350565b600080600080600060a0868803121561315e57600080fd5b600061316c88828901612be0565b955050602061317d88828901612be0565b945050604061318e88828901612d25565b935050606061319f88828901612d25565b925050608086013567ffffffffffffffff8111156131bc57600080fd5b6131c888828901612de2565b9150509295509295909350565b60008060008060008060c087890312156131ee57600080fd5b60006131fc89828a01612be0565b965050602061320d89828a01612be0565b955050604061321e89828a01612ec2565b945050606061322f89828a01612ec2565b935050608061324089828a01612d25565b92505060a087013567ffffffffffffffff81111561325d57600080fd5b61326989828a01612de2565b9150509295509295509295565b600080600080600060a0868803121561328e57600080fd5b600061329c88828901612be0565b95505060206132ad88828901612be0565b94505060406132be88828901612ec2565b93505060606132cf88828901612ec2565b925050608086013567ffffffffffffffff8111156132ec57600080fd5b6132f888828901612de2565b9150509295509295909350565b60008060006060848603121561331a57600080fd5b600061332886828701612be0565b935050602084013567ffffffffffffffff81111561334557600080fd5b61335186828701612ca2565b925050604084013567ffffffffffffffff81111561336e57600080fd5b61337a86828701612ca2565b9150509250925092565b6000806000806080858703121561339a57600080fd5b60006133a887828801612be0565b945050602085013567ffffffffffffffff8111156133c557600080fd5b6133d187828801612ca2565b935050604085013567ffffffffffffffff8111156133ee57600080fd5b6133fa87828801612ca2565b925050606085013567ffffffffffffffff81111561341757600080fd5b61342387828801612de2565b91505092959194509250565b6000806040838503121561344257600080fd5b600061345085828601612be0565b925050602061346185828601612d25565b9150509250929050565b6000806000806080858703121561348157600080fd5b600061348f87828801612be0565b94505060206134a087828801612d4f565b935050604085013567ffffffffffffffff8111156134bd57600080fd5b6134c987828801612de2565b925050606085013567ffffffffffffffff8111156134e657600080fd5b6134f287828801612de2565b91505092959194509250565b6000806040838503121561351157600080fd5b600061351f85828601612be0565b925050602061353085828601612ec2565b9150509250929050565b60008060006060848603121561354f57600080fd5b600061355d86828701612be0565b935050602061356e86828701612ec2565b925050604061357f86828701612ec2565b9150509250925092565b6000806000806080858703121561359f57600080fd5b60006135ad87828801612be0565b94505060206135be87828801612ec2565b93505060406135cf87828801612ec2565b925050606085013567ffffffffffffffff8111156135ec57600080fd5b6135f887828801612de2565b91505092959194509250565b6000806040838503121561361757600080fd5b600083013567ffffffffffffffff81111561363157600080fd5b61363d85828601612c1f565b925050602083013567ffffffffffffffff81111561365a57600080fd5b61366685828601612ca2565b9150509250929050565b60006020828403121561368257600080fd5b600061369084828501612d3a565b91505092915050565b6000602082840312156136ab57600080fd5b60006136b984828501612d64565b91505092915050565b6000602082840312156136d457600080fd5b60006136e284828501612d79565b91505092915050565b600080604083850312156136fe57600080fd5b600083015167ffffffffffffffff81111561371857600080fd5b61372485828601612d8e565b925050602083015167ffffffffffffffff81111561374157600080fd5b61374d85828601612d8e565b9150509250929050565b60006020828403121561376957600080fd5b600082015167ffffffffffffffff81111561378357600080fd5b61378f84828501612e36565b91505092915050565b600080604083850312156137ab57600080fd5b600083015167ffffffffffffffff8111156137c557600080fd5b6137d185828601612e36565b925050602083015167ffffffffffffffff8111156137ee57600080fd5b6137fa85828601612d8e565b9150509250929050565b60006020828403121561381657600080fd5b600061382484828501612ec2565b91505092915050565b600061383983836145cf565b60208301905092915050565b600061385183836145ed565b60208301905092915050565b613866816150ae565b82525050565b61387581615011565b82525050565b600061388682614f84565b6138908185614fbd565b935061389b83614f5f565b8060005b838110156138cc5781516138b3888261382d565b97506138be83614fb0565b92505060018101905061389f565b5085935050505092915050565b60006138e482614f84565b6138ee8185614fce565b93506138f983614f5f565b8060005b8381101561392a5781516139118882613845565b975061391c83614fb0565b9250506001810190506138fd565b5085935050505092915050565b61394081615035565b82525050565b61394f81615041565b82525050565b61396661396182615041565b615126565b82525050565b600061397782614f8f565b6139818185614fd9565b93506139918185602086016150f3565b61399a8161513a565b840191505092915050565b60006139b082614f8f565b6139ba8185614fea565b93506139ca8185602086016150f3565b80840191505092915050565b60006139e182614fa5565b6139eb8185614ff5565b93506139fb8185602086016150f3565b613a048161513a565b840191505092915050565b6000613a1a82614fa5565b613a248185615006565b9350613a348185602086016150f3565b80840191505092915050565b6000613a4b82614f9a565b613a558185615006565b9350613a658185602086016150f3565b80840191505092915050565b600081546001811660008114613a8e5760018114613ab357613af7565b607f6002830416613a9f8187615006565b955060ff1983168652808601935050613af7565b60028204613ac18187615006565b9550613acc85614f6f565b60005b82811015613aee57815481890152600182019150602081019050613acf565b82880195505050505b505092915050565b6000613b0c602b83614ff5565b91507f4552433131353523736166655472616e7366657246726f6d3a20494e56414c4960008301527f445f524543495049454e540000000000000000000000000000000000000000006020830152604082019050919050565b6000613b72601c83615006565b91507f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000830152601c82019050919050565b6000613bb2603783614ff5565b91507f4c6962427974657323706f704c617374427974653a20475245415445525f544860008301527f414e5f5a45524f5f4c454e4754485f52455155495245440000000000000000006020830152604082019050919050565b6000613c18602a83614ff5565b91507f4552433131353523736166655472616e7366657246726f6d3a20494e56414c4960008301527f445f4f50455241544f52000000000000000000000000000000000000000000006020830152604082019050919050565b6000613c7e601783614ff5565b91507f536166654d617468237375623a20554e444552464c4f570000000000000000006000830152602082019050919050565b6000613cbe603583614ff5565b91507f45524331313535235f7361666542617463685472616e7366657246726f6d3a2060008301527f494e56414c49445f4152524159535f4c454e47544800000000000000000000006020830152604082019050919050565b6000613d24603a83614ff5565b91507f5369676e617475726556616c696461746f7223697356616c69645369676e617460008301527f7572653a20554e535550504f525445445f5349474e41545552450000000000006020830152604082019050919050565b6000613d8a603383614ff5565b91507f455243313135354d657461236d657461536166655472616e7366657246726f6d60008301527f3a20494e56414c49445f524543495049454e54000000000000000000000000006020830152604082019050919050565b6000613df0603683614ff5565b91507f5369676e617475726556616c696461746f7223697356616c69645369676e617460008301527f7572653a20494c4c4547414c5f5349474e4154555245000000000000000000006020830152604082019050919050565b6000613e56603383614ff5565b91507f455243313135354d657461235f7369676e617475726556616c69646174696f6e60008301527f3a20494e56414c49445f5349474e4154555245000000000000000000000000006020830152604082019050919050565b6000613ebc603783614ff5565b91507f5369676e617475726556616c696461746f7223697356616c69645369676e617460008301527f7572653a204c454e4754485f39375f52455155495245440000000000000000006020830152604082019050919050565b6000613f22603083614ff5565b91507f45524331313535237361666542617463685472616e7366657246726f6d3a204960008301527f4e56414c49445f524543495049454e54000000000000000000000000000000006020830152604082019050919050565b6000613f88603083614ff5565b91507f455243313135354d696e744275726e2362617463684275726e3a20494e56414c60008301527f49445f4152524159535f4c454e475448000000000000000000000000000000006020830152604082019050919050565b6000613fee600583615006565b91507f2e6a736f6e0000000000000000000000000000000000000000000000000000006000830152600582019050919050565b600061402e602783614ff5565b91507f455243313135354d6574614d696e744275726e4d6f636b3a20494e56414c494460008301527f5f4d4554484f44000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000614094602c83614ff5565b91507f455243313135352362616c616e63654f6642617463683a20494e56414c49445f60008301527f41525241595f4c454e47544800000000000000000000000000000000000000006020830152604082019050919050565b60006140fa603283614ff5565b91507f455243313135354d657461235f7472616e736665724761734665653a2045524360008301527f32305f5452414e534645525f4641494c454400000000000000000000000000006020830152604082019050919050565b6000614160603383614ff5565b91507f5369676e617475726556616c696461746f7223697356616c69645369676e617460008301527f7572653a20494e56414c49445f5349474e4552000000000000000000000000006020830152604082019050919050565b60006141c6602f83614ff5565b91507f45524331313535237361666542617463685472616e7366657246726f6d3a204960008301527f4e56414c49445f4f50455241544f5200000000000000000000000000000000006020830152604082019050919050565b600061422c604383614ff5565b91507f5369676e617475726556616c696461746f7223697356616c69645369676e617460008301527f7572653a204c454e4754485f475245415445525f5448414e5f305f524551554960208301527f52454400000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b60006142b8603083614ff5565b91507f455243313135354d696e744275726e2362617463684d696e743a20494e56414c60008301527f49445f4152524159535f4c454e475448000000000000000000000000000000006020830152604082019050919050565b600061431e603883614ff5565b91507f455243313135354d657461236d6574615361666542617463685472616e73666560008301527f7246726f6d3a20494e56414c49445f524543495049454e5400000000000000006020830152604082019050919050565b6000614384600083614fd9565b9150600082019050919050565b600061439e603f83614ff5565b91507f45524331313535235f63616c6c6f6e455243313135354261746368526563656960008301527f7665643a20494e56414c49445f4f4e5f524543454956455f4d455353414745006020830152604082019050919050565b6000614404603a83614ff5565b91507f45524331313535235f63616c6c6f6e4552433131353552656365697665643a2060008301527f494e56414c49445f4f4e5f524543454956455f4d4553534147450000000000006020830152604082019050919050565b600061446a603c83614ff5565b91507f4c696242797465732372656164427974657333323a20475245415445525f4f5260008301527f5f455155414c5f544f5f33325f4c454e4754485f5245515549524544000000006020830152604082019050919050565b60006144d0601683614ff5565b91507f536166654d617468236164643a204f564552464c4f57000000000000000000006000830152602082019050919050565b6000614510602f83614ff5565b91507f455243313135354d657461235f7369676e617475726556616c69646174696f6e60008301527f3a20494e56414c49445f4e4f4e434500000000000000000000000000000000006020830152604082019050919050565b6000614576602e83614ff5565b91507f455243313135354d657461235f7472616e736665724761734665653a20554e5360008301527f5550504f525445445f544f4b454e0000000000000000000000000000000000006020830152604082019050919050565b6145d881615097565b82525050565b6145e781615097565b82525050565b6145f681615097565b82525050565b61460d61460882615097565b615130565b82525050565b61461c816150a1565b82525050565b600061462e82846138d9565b915081905092915050565b600061464582866139a5565b915061465182856145fc565b6020820191506146618284613955565b602082019150819050949350505050565b600061467e82866139a5565b915061468a82856145fc565b60208201915061469a82846139a5565b9150819050949350505050565b60006146b38286613a40565b91506146bf8285613955565b6020820191506146cf8284613955565b602082019150819050949350505050565b60006146ec8285613a71565b91506146f88284613a0f565b915061470382613fe1565b91508190509392505050565b600061471a82613b65565b91506147268284613955565b60208201915081905092915050565b600060a08201905061474a600083018861385d565b614757602083018761386c565b8181036040830152614769818661387b565b9050818103606083015261477d818561387b565b90508181036080830152614791818461396c565b90509695505050505050565b600060a0820190506147b2600083018861385d565b6147bf602083018761386c565b6147cc60408301866145de565b6147d960608301856145de565b81810360808301526147eb818461396c565b90509695505050505050565b600060608201905061480c600083018661386c565b614819602083018561386c565b61482660408301846145de565b949350505050565b600060a082019050614843600083018761386c565b614850602083018661386c565b61485d60408301856145de565b61486a60608301846145de565b818103608083015261487b81614377565b905095945050505050565b600060208201905081810360008301526148a0818461387b565b905092915050565b600060408201905081810360008301526148c2818561387b565b905081810360208301526148d6818461387b565b90509392505050565b60006020820190506148f46000830184613937565b92915050565b600060408201905061490f6000830185613946565b61491c602083018461386c565b9392505050565b600060c0820190506149386000830189613946565b614945602083018861386c565b614952604083018761386c565b61495f6060830186613946565b61496c6080830185613946565b61497960a08301846145de565b979650505050505050565b600060a0820190506149996000830188613946565b6149a6602083018761386c565b6149b3604083018661386c565b6149c060608301856145de565b6149cd60808301846145de565b9695505050505050565b600060c0820190506149ec6000830189613946565b6149f9602083018861386c565b614a06604083018761386c565b614a1360608301866145de565b614a2060808301856145de565b614a2d60a08301846145de565b979650505050505050565b6000604082019050614a4d6000830185613946565b8181036020830152614a5f818461396c565b90509392505050565b6000608082019050614a7d6000830187613946565b614a8a6020830186614613565b614a976040830185613946565b614aa46060830184613946565b95945050505050565b60006040820190508181036000830152614ac7818561396c565b90508181036020830152614adb818461396c565b90509392505050565b60006020820190508181036000830152614afe81846139d6565b905092915050565b60006020820190508181036000830152614b1f81613aff565b9050919050565b60006020820190508181036000830152614b3f81613ba5565b9050919050565b60006020820190508181036000830152614b5f81613c0b565b9050919050565b60006020820190508181036000830152614b7f81613c71565b9050919050565b60006020820190508181036000830152614b9f81613cb1565b9050919050565b60006020820190508181036000830152614bbf81613d17565b9050919050565b60006020820190508181036000830152614bdf81613d7d565b9050919050565b60006020820190508181036000830152614bff81613de3565b9050919050565b60006020820190508181036000830152614c1f81613e49565b9050919050565b60006020820190508181036000830152614c3f81613eaf565b9050919050565b60006020820190508181036000830152614c5f81613f15565b9050919050565b60006020820190508181036000830152614c7f81613f7b565b9050919050565b60006020820190508181036000830152614c9f81614021565b9050919050565b60006020820190508181036000830152614cbf81614087565b9050919050565b60006020820190508181036000830152614cdf816140ed565b9050919050565b60006020820190508181036000830152614cff81614153565b9050919050565b60006020820190508181036000830152614d1f816141b9565b9050919050565b60006020820190508181036000830152614d3f8161421f565b9050919050565b60006020820190508181036000830152614d5f816142ab565b9050919050565b60006020820190508181036000830152614d7f81614311565b9050919050565b60006020820190508181036000830152614d9f81614391565b9050919050565b60006020820190508181036000830152614dbf816143f7565b9050919050565b60006020820190508181036000830152614ddf8161445d565b9050919050565b60006020820190508181036000830152614dff816144c3565b9050919050565b60006020820190508181036000830152614e1f81614503565b9050919050565b60006020820190508181036000830152614e3f81614569565b9050919050565b6000602082019050614e5b60008301846145de565b92915050565b6000604082019050614e7660008301856145de565b614e8360208301846145de565b9392505050565b6000604051905081810181811067ffffffffffffffff82111715614ead57600080fd5b8060405250919050565b600067ffffffffffffffff821115614ece57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115614ef657600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115614f1e57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115614f4a57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b600061501c82615077565b9050919050565b600061502e82615077565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006150b9826150c0565b9050919050565b60006150cb826150d2565b9050919050565b60006150dd82615077565b9050919050565b82818337600083830152505050565b60005b838110156151115780820151818401526020810190506150f6565b83811115615120576000848401525b50505050565b6000819050919050565b6000819050919050565b6000601f19601f8301169050919050565b61515481615011565b811461515f57600080fd5b50565b61516b81615023565b811461517657600080fd5b50565b61518281615035565b811461518d57600080fd5b50565b61519981615041565b81146151a457600080fd5b50565b6151b08161504b565b81146151bb57600080fd5b50565b6151c781615097565b81146151d257600080fd5b5056fea365627a7a723158204e429bc3362c1d9cde02fe1f3e194de421b300f795736a19a531758d4ed71c156c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061010a5760003560e01c8063a3d4926e116100a2578063d7a0ad9011610071578063d7a0ad90146102f9578063e985e9c514610315578063f242432a14610345578063f5d4c82014610361578063fa4e12d71461037d5761010a565b8063a3d4926e14610289578063a3f091f5146102a5578063bd7a6c41146102c1578063ce0b514b146102dd5761010a565b80632eb2c2d6116100de5780632eb2c2d614610205578063437ecbe9146102215780634e1273f41461023d578063a22cb4651461026d5761010a565b8062fdd58e1461014557806301ffc9a7146101755780630e89341c146101a55780632d0335ab146101d5575b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013c90614c86565b60405180910390fd5b61015f600480360361015a91908101906134fe565b6103ad565b60405161016c9190614e46565b60405180910390f35b61018f600480360361018a9190810190613699565b610407565b60405161019c91906148df565b60405180910390f35b6101bf60048036036101ba9190810190613804565b6104b8565b6040516101cc9190614ae4565b60405180910390f35b6101ef60048036036101ea9190810190612eec565b6104ec565b6040516101fc9190614e46565b60405180910390f35b61021f600480360361021a9190810190613087565b610535565b005b61023b6004803603610236919081019061353a565b610645565b005b61025760048036036102529190810190613604565b610655565b6040516102649190614886565b60405180910390f35b6102876004803603610282919081019061342f565b610785565b005b6102a3600480360361029e9190810190612fb6565b610882565b005b6102bf60048036036102ba9190810190613589565b610a20565b005b6102db60048036036102d69190810190613305565b610a32565b005b6102f760048036036102f291908101906131d5565b610a42565b005b610313600480360361030e9190810190613384565b610b94565b005b61032f600480360361032a9190810190612f7a565b610ba6565b60405161033c91906148df565b60405180910390f35b61035f600480360361035a9190810190613276565b610c3a565b005b61037b60048036036103769190810190613146565b610d4a565b005b6103976004803603610392919081019061346b565b610ef0565b6040516103a491906148df565b60405180910390f35b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b60006301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104a0575063d9b67a2660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b156104ae57600190506104b3565b600090505b919050565b606060036104c58361155e565b6040516020016104d69291906146e0565b6040516020818303038152906040529050919050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061057557506105748533610ba6565b5b6105b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ab90614d06565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610624576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061b90614c46565b60405180910390fd5b61063085858585611691565b61063e858585855a86611958565b5050505050565b610650838383611aa6565b505050565b6060815183511461069b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069290614ca6565b60405180910390fd5b606083516040519080825280602002602001820160405280156106cd5781602001602082028038833980820191505090505b50905060008090505b845181101561077a576000808683815181106106ee57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085838151811061073e57fe5b602002602001015181526020019081526020016000205482828151811061076157fe5b60200260200101818152505080806001019150506106d6565b508091505092915050565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161087691906148df565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614156108f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e990614d66565b60405180910390fd5b60606108fc612ba2565b60606109af89857fa3d4926e8cf8fe8e020cd29f514c256bc2eec62aa2337e415f1a33a4828af5a060001b8c8c8c60405160200161093a9190614622565b604051602081830303815290604052805190602001208c6040516020016109619190614622565b604051602081830303815290604052805190602001208c610983576000610986565b60015b60405160200161099b96959493929190614923565b604051602081830303815290604052611bdf565b90506109bd89898989611691565b8415610a0657808060200190516109d79190810190613798565b81915080905080945081935050506109f789898989866020015186611958565b610a018983611e0c565b610a15565b610a14898989895a86611958565b5b505050505050505050565b610a2c848484846120e7565b50505050565b610a3d838383612230565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610ab2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa990614bc6565b60405180910390fd5b6060610abc612ba2565b6060610b2389857fce0b514b3931bdbe4d5d44e4f035afe7113767b7db71949271f6a62d9c60f55860001b8c8c8c8c8c610af7576000610afa565b60015b604051602001610b0f969594939291906149d7565b604051602081830303815290604052611bdf565b9050610b3189898989612408565b8415610b7a5780806020019051610b4b9190810190613798565b8191508090508094508193505050610b6b898989898660200151866125f6565b610b758983611e0c565b610b89565b610b88898989895a866125f6565b5b505050505050505050565b610ba084848484612744565b50505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610c7a5750610c798533610ba6565b5b610cb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb090614b46565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610d29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2090614b06565b60405180910390fd5b610d3585858585612408565b610d43858585855a866125f6565b5050505050565b6060610dbd86837ff5d4c820494c8595de274c7ff619bead38aac4fbc3d143b5bf956aa4b84fa52460001b898989610d83576000610d86565b60015b89610d92576000610d95565b60015b604051602001610da9959493929190614984565b604051602081830303815290604052611bdf565b905083600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3186604051610eb091906148df565b60405180910390a38215610ee857610ec6612ba2565b81806020019051610eda9190810190613757565b9050610ee68782611e0c565b505b505050505050565b600080825111610f35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2c90614d26565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610fa5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9c90614ce6565b60405180910390fd5b6000610fb08361292d565b60f81c9050600580811115610fc157fe5b60ff168160ff1610611008576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fff90614ba6565b60405180910390fd5b60008160ff16600581111561101957fe5b90506000806000806000600581111561102e57fe5b85600581111561103a57fe5b141561107b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107290614be6565b60405180910390fd5b6001600581111561108857fe5b85600581111561109457fe5b14156111b75760618851146110de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d590614c26565b60405180910390fd5b6110f26000896129a090919063ffffffff16565b92506111086020896129a090919063ffffffff16565b91508760408151811061111757fe5b602001015160f81c60f81b60f81c935060018a8585856040516000815260200160405260405161114a9493929190614a68565b6020604051602081039080840390855afa15801561116c573d6000803e3d6000fd5b5050506020604051035190508073ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff16149650869650505050505050611556565b600260058111156111c457fe5b8560058111156111d057fe5b141561131957606188511461121a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121190614c26565b60405180910390fd5b61122e6000896129a090919063ffffffff16565b92506112446020896129a090919063ffffffff16565b91508760408151811061125357fe5b602001015160f81c60f81b60f81c935060018a604051602001611276919061470f565b60405160208183030381529060405280519060200120858585604051600081526020016040526040516112ac9493929190614a68565b6020604051602081039080840390855afa1580156112ce573d6000803e3d6000fd5b5050506020604051035190508073ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff16149650869650505050505050611556565b6003600581111561132657fe5b85600581111561133257fe5b141561141a578a73ffffffffffffffffffffffffffffffffffffffff166320c13b0b8a8a6040518363ffffffff1660e01b8152600401611373929190614aad565b60206040518083038186803b15801561138b57600080fd5b505afa15801561139f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113c391908101906136c2565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166320c13b0b60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149650869650505050505050611556565b6004600581111561142757fe5b85600581111561143357fe5b141561151b578a73ffffffffffffffffffffffffffffffffffffffff16631626ba7e8b8a6040518363ffffffff1660e01b8152600401611474929190614a38565b60206040518083038186803b15801561148c57600080fd5b505afa1580156114a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114c491908101906136c2565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916631626ba7e60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149650869650505050505050611556565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154d90614ba6565b60405180910390fd5b949350505050565b606060008214156115a6576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061168c565b6000829050600083905060005b600083146115d5578080600101915050600a83816115cd57fe5b0492506115b3565b6060816040519080825280601f01601f19166020018201604052801561160a5781602001600182028038833980820191505090505b50905060006001830390505b6000841461168357600a848161162857fe5b0660300160f81b8282806001900393508151811061164257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a848161167b57fe5b049350611616565b81955050505050505b919050565b80518251146116d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116cc90614b86565b60405180910390fd5b60008251905060008090505b818110156118d2576117718382815181106116f857fe5b60200260200101516000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087858151811061174c57fe5b60200260200101518152602001908152602001600020546129fe90919063ffffffff16565b6000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008684815181106117bd57fe5b602002602001015181526020019081526020016000208190555061185f8382815181106117e657fe5b60200260200101516000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087858151811061183a57fe5b6020026020010151815260200190815260200160002054612a5490919063ffffffff16565b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008684815181106118ab57fe5b602002602001015181526020019081526020016000208190555080806001019150506116e1565b508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516119499291906148a8565b60405180910390a45050505050565b6119778573ffffffffffffffffffffffffffffffffffffffff16612aa9565b15611a9e5760008573ffffffffffffffffffffffffffffffffffffffff1663bc197c8184338a8989886040518763ffffffff1660e01b81526004016119c0959493929190614735565b602060405180830381600088803b1580156119da57600080fd5b5087f11580156119ee573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250611a1391908101906136c2565b905063bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611a9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a9390614d86565b60405180910390fd5b505b505050505050565b611b08816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020546129fe90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051611bd2929190614e61565b60405180910390a4505050565b60608083806020019051611bf691908101906136eb565b81915080905080935081925050506000600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000611c5e6041846129a090919063ffffffff16565b60001c9050818110158015611c7557506064820181105b611cb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cab90614e06565b60405180910390fd5b6000611cf086838780519060200120604051602001611cd593929190614639565b60405160208183030381529060405280519060200120612aee565b90506060868387604051602001611d0993929190614672565b604051602081830303815290604052905060018301600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508873ffffffffffffffffffffffffffffffffffffffff167fb861b7bdbe611a846ab271b8d2810391bc8b5a968f390c322438ecab66bccf5960018501604051611daa9190614e46565b60405180910390a2611dbe89838388610ef0565b611dfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611df490614c06565b60405180910390fd5b85955050505050509392505050565b6000611e1b826060015161292d565b60f81c9050600280811115611e2c57fe5b60ff168160ff1610611e73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e6a90614e26565b60405180910390fd5b60008160ff166002811115611e8457fe5b905060008060008086600001519050600073ffffffffffffffffffffffffffffffffffffffff16876040015173ffffffffffffffffffffffffffffffffffffffff1614611ed5578660400151611ed7565b335b925060006002811115611ee657fe5b856002811115611ef257fe5b1415611ff4578660600151806020019051611f109190810190612f3e565b81915080935081955050503073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611f7d57611f5b88848484612408565b611f788884845a85604051806020016040528060008152506125f6565b611fef565b8373ffffffffffffffffffffffffffffffffffffffff1663f242432a898585856040518563ffffffff1660e01b8152600401611fbc949392919061482e565b600060405180830381600087803b158015611fd657600080fd5b505af1158015611fea573d6000803e3d6000fd5b505050505b6120dd565b866060015180602001905161200c9190810190612f15565b93508373ffffffffffffffffffffffffffffffffffffffff166323b872dd8985846040518463ffffffff1660e01b815260040161204b939291906147f7565b602060405180830381600087803b15801561206557600080fd5b505af1158015612079573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061209d9190810190613670565b6120dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120d390614cc6565b60405180910390fd5b5b5050505050505050565b612149826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002054612a5490919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628686604051612213929190614e61565b60405180910390a461222a60008585855a866125f6565b50505050565b60008251905081518114612279576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161227090614c66565b60405180910390fd5b60008090505b818110156123825761230f83828151811061229657fe5b60200260200101516000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008785815181106122ea57fe5b60200260200101518152602001908152602001600020546129fe90919063ffffffff16565b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086848151811061235b57fe5b6020026020010151815260200190815260200160002081905550808060010191505061227f565b50600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516123fa9291906148a8565b60405180910390a450505050565b61246a816000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020546129fe90919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000208190555061251f816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054612a5490919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516125e8929190614e61565b60405180910390a450505050565b6126158573ffffffffffffffffffffffffffffffffffffffff16612aa9565b1561273c5760008573ffffffffffffffffffffffffffffffffffffffff1663f23a6e6184338a8989886040518763ffffffff1660e01b815260040161265e95949392919061479d565b602060405180830381600088803b15801561267857600080fd5b5087f115801561268c573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052506126b191908101906136c2565b905063f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461273a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161273190614da6565b60405180910390fd5b505b505050505050565b8151835114612788576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161277f90614d46565b60405180910390fd5b60008351905060008090505b81811015612897576128248482815181106127ab57fe5b60200260200101516000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008885815181106127ff57fe5b6020026020010151815260200190815260200160002054612a5490919063ffffffff16565b6000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087848151811061287057fe5b60200260200101518152602001908152602001600020819055508080600101915050612794565b508473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161290f9291906148a8565b60405180910390a461292660008686865a87611958565b5050505050565b600080825111612972576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161296990614b26565b60405180910390fd5b8160018351038151811061298257fe5b602001015160f81c60f81b9050600182510380835250809050919050565b600060208201835110156129e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129e090614dc6565b60405180910390fd5b60208201915081830151905080905092915050565b600082821115612a43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a3a90614b66565b60405180910390fd5b600082840390508091505092915050565b600080828401905083811015612a9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a9690614de6565b60405180910390fd5b8091505092915050565b600080823f90506000801b8114158015612ae657507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b8114155b915050919050565b60006040518060400160405280600281526020017f19010000000000000000000000000000000000000000000000000000000000008152507f035aff83d86937d35b32e04f0ddc6ff469290eef2f1b692d8a815c89404d474960001b30604051602001612b5c9291906148fa565b6040516020818303038152906040528051906020012083604051602001612b85939291906146a7565b604051602081830303815290604052805190602001209050919050565b60405180608001604052806000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b600081359050612bef8161514b565b92915050565b600081519050612c048161514b565b92915050565b600081519050612c1981615162565b92915050565b600082601f830112612c3057600080fd5b8135612c43612c3e82614eb7565b614e8a565b91508181835260208401935060208101905083856020840282011115612c6857600080fd5b60005b83811015612c985781612c7e8882612be0565b845260208401935060208301925050600181019050612c6b565b5050505092915050565b600082601f830112612cb357600080fd5b8135612cc6612cc182614edf565b614e8a565b91508181835260208401935060208101905083856020840282011115612ceb57600080fd5b60005b83811015612d1b5781612d018882612ec2565b845260208401935060208301925050600181019050612cee565b5050505092915050565b600081359050612d3481615179565b92915050565b600081519050612d4981615179565b92915050565b600081359050612d5e81615190565b92915050565b600081359050612d73816151a7565b92915050565b600081519050612d88816151a7565b92915050565b600082601f830112612d9f57600080fd5b8151612db2612dad82614f07565b614e8a565b91508082526020830160208301858383011115612dce57600080fd5b612dd98382846150f3565b50505092915050565b600082601f830112612df357600080fd5b8135612e06612e0182614f33565b614e8a565b91508082526020830160208301858383011115612e2257600080fd5b612e2d8382846150e4565b50505092915050565b600060808284031215612e4857600080fd5b612e526080614e8a565b90506000612e6284828501612ed7565b6000830152506020612e7684828501612ed7565b6020830152506040612e8a84828501612bf5565b604083015250606082015167ffffffffffffffff811115612eaa57600080fd5b612eb684828501612d8e565b60608301525092915050565b600081359050612ed1816151be565b92915050565b600081519050612ee6816151be565b92915050565b600060208284031215612efe57600080fd5b6000612f0c84828501612be0565b91505092915050565b600060208284031215612f2757600080fd5b6000612f3584828501612c0a565b91505092915050565b60008060408385031215612f5157600080fd5b6000612f5f85828601612c0a565b9250506020612f7085828601612ed7565b9150509250929050565b60008060408385031215612f8d57600080fd5b6000612f9b85828601612be0565b9250506020612fac85828601612be0565b9150509250929050565b60008060008060008060c08789031215612fcf57600080fd5b6000612fdd89828a01612be0565b9650506020612fee89828a01612be0565b955050604087013567ffffffffffffffff81111561300b57600080fd5b61301789828a01612ca2565b945050606087013567ffffffffffffffff81111561303457600080fd5b61304089828a01612ca2565b935050608061305189828a01612d25565b92505060a087013567ffffffffffffffff81111561306e57600080fd5b61307a89828a01612de2565b9150509295509295509295565b600080600080600060a0868803121561309f57600080fd5b60006130ad88828901612be0565b95505060206130be88828901612be0565b945050604086013567ffffffffffffffff8111156130db57600080fd5b6130e788828901612ca2565b935050606086013567ffffffffffffffff81111561310457600080fd5b61311088828901612ca2565b925050608086013567ffffffffffffffff81111561312d57600080fd5b61313988828901612de2565b9150509295509295909350565b600080600080600060a0868803121561315e57600080fd5b600061316c88828901612be0565b955050602061317d88828901612be0565b945050604061318e88828901612d25565b935050606061319f88828901612d25565b925050608086013567ffffffffffffffff8111156131bc57600080fd5b6131c888828901612de2565b9150509295509295909350565b60008060008060008060c087890312156131ee57600080fd5b60006131fc89828a01612be0565b965050602061320d89828a01612be0565b955050604061321e89828a01612ec2565b945050606061322f89828a01612ec2565b935050608061324089828a01612d25565b92505060a087013567ffffffffffffffff81111561325d57600080fd5b61326989828a01612de2565b9150509295509295509295565b600080600080600060a0868803121561328e57600080fd5b600061329c88828901612be0565b95505060206132ad88828901612be0565b94505060406132be88828901612ec2565b93505060606132cf88828901612ec2565b925050608086013567ffffffffffffffff8111156132ec57600080fd5b6132f888828901612de2565b9150509295509295909350565b60008060006060848603121561331a57600080fd5b600061332886828701612be0565b935050602084013567ffffffffffffffff81111561334557600080fd5b61335186828701612ca2565b925050604084013567ffffffffffffffff81111561336e57600080fd5b61337a86828701612ca2565b9150509250925092565b6000806000806080858703121561339a57600080fd5b60006133a887828801612be0565b945050602085013567ffffffffffffffff8111156133c557600080fd5b6133d187828801612ca2565b935050604085013567ffffffffffffffff8111156133ee57600080fd5b6133fa87828801612ca2565b925050606085013567ffffffffffffffff81111561341757600080fd5b61342387828801612de2565b91505092959194509250565b6000806040838503121561344257600080fd5b600061345085828601612be0565b925050602061346185828601612d25565b9150509250929050565b6000806000806080858703121561348157600080fd5b600061348f87828801612be0565b94505060206134a087828801612d4f565b935050604085013567ffffffffffffffff8111156134bd57600080fd5b6134c987828801612de2565b925050606085013567ffffffffffffffff8111156134e657600080fd5b6134f287828801612de2565b91505092959194509250565b6000806040838503121561351157600080fd5b600061351f85828601612be0565b925050602061353085828601612ec2565b9150509250929050565b60008060006060848603121561354f57600080fd5b600061355d86828701612be0565b935050602061356e86828701612ec2565b925050604061357f86828701612ec2565b9150509250925092565b6000806000806080858703121561359f57600080fd5b60006135ad87828801612be0565b94505060206135be87828801612ec2565b93505060406135cf87828801612ec2565b925050606085013567ffffffffffffffff8111156135ec57600080fd5b6135f887828801612de2565b91505092959194509250565b6000806040838503121561361757600080fd5b600083013567ffffffffffffffff81111561363157600080fd5b61363d85828601612c1f565b925050602083013567ffffffffffffffff81111561365a57600080fd5b61366685828601612ca2565b9150509250929050565b60006020828403121561368257600080fd5b600061369084828501612d3a565b91505092915050565b6000602082840312156136ab57600080fd5b60006136b984828501612d64565b91505092915050565b6000602082840312156136d457600080fd5b60006136e284828501612d79565b91505092915050565b600080604083850312156136fe57600080fd5b600083015167ffffffffffffffff81111561371857600080fd5b61372485828601612d8e565b925050602083015167ffffffffffffffff81111561374157600080fd5b61374d85828601612d8e565b9150509250929050565b60006020828403121561376957600080fd5b600082015167ffffffffffffffff81111561378357600080fd5b61378f84828501612e36565b91505092915050565b600080604083850312156137ab57600080fd5b600083015167ffffffffffffffff8111156137c557600080fd5b6137d185828601612e36565b925050602083015167ffffffffffffffff8111156137ee57600080fd5b6137fa85828601612d8e565b9150509250929050565b60006020828403121561381657600080fd5b600061382484828501612ec2565b91505092915050565b600061383983836145cf565b60208301905092915050565b600061385183836145ed565b60208301905092915050565b613866816150ae565b82525050565b61387581615011565b82525050565b600061388682614f84565b6138908185614fbd565b935061389b83614f5f565b8060005b838110156138cc5781516138b3888261382d565b97506138be83614fb0565b92505060018101905061389f565b5085935050505092915050565b60006138e482614f84565b6138ee8185614fce565b93506138f983614f5f565b8060005b8381101561392a5781516139118882613845565b975061391c83614fb0565b9250506001810190506138fd565b5085935050505092915050565b61394081615035565b82525050565b61394f81615041565b82525050565b61396661396182615041565b615126565b82525050565b600061397782614f8f565b6139818185614fd9565b93506139918185602086016150f3565b61399a8161513a565b840191505092915050565b60006139b082614f8f565b6139ba8185614fea565b93506139ca8185602086016150f3565b80840191505092915050565b60006139e182614fa5565b6139eb8185614ff5565b93506139fb8185602086016150f3565b613a048161513a565b840191505092915050565b6000613a1a82614fa5565b613a248185615006565b9350613a348185602086016150f3565b80840191505092915050565b6000613a4b82614f9a565b613a558185615006565b9350613a658185602086016150f3565b80840191505092915050565b600081546001811660008114613a8e5760018114613ab357613af7565b607f6002830416613a9f8187615006565b955060ff1983168652808601935050613af7565b60028204613ac18187615006565b9550613acc85614f6f565b60005b82811015613aee57815481890152600182019150602081019050613acf565b82880195505050505b505092915050565b6000613b0c602b83614ff5565b91507f4552433131353523736166655472616e7366657246726f6d3a20494e56414c4960008301527f445f524543495049454e540000000000000000000000000000000000000000006020830152604082019050919050565b6000613b72601c83615006565b91507f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000830152601c82019050919050565b6000613bb2603783614ff5565b91507f4c6962427974657323706f704c617374427974653a20475245415445525f544860008301527f414e5f5a45524f5f4c454e4754485f52455155495245440000000000000000006020830152604082019050919050565b6000613c18602a83614ff5565b91507f4552433131353523736166655472616e7366657246726f6d3a20494e56414c4960008301527f445f4f50455241544f52000000000000000000000000000000000000000000006020830152604082019050919050565b6000613c7e601783614ff5565b91507f536166654d617468237375623a20554e444552464c4f570000000000000000006000830152602082019050919050565b6000613cbe603583614ff5565b91507f45524331313535235f7361666542617463685472616e7366657246726f6d3a2060008301527f494e56414c49445f4152524159535f4c454e47544800000000000000000000006020830152604082019050919050565b6000613d24603a83614ff5565b91507f5369676e617475726556616c696461746f7223697356616c69645369676e617460008301527f7572653a20554e535550504f525445445f5349474e41545552450000000000006020830152604082019050919050565b6000613d8a603383614ff5565b91507f455243313135354d657461236d657461536166655472616e7366657246726f6d60008301527f3a20494e56414c49445f524543495049454e54000000000000000000000000006020830152604082019050919050565b6000613df0603683614ff5565b91507f5369676e617475726556616c696461746f7223697356616c69645369676e617460008301527f7572653a20494c4c4547414c5f5349474e4154555245000000000000000000006020830152604082019050919050565b6000613e56603383614ff5565b91507f455243313135354d657461235f7369676e617475726556616c69646174696f6e60008301527f3a20494e56414c49445f5349474e4154555245000000000000000000000000006020830152604082019050919050565b6000613ebc603783614ff5565b91507f5369676e617475726556616c696461746f7223697356616c69645369676e617460008301527f7572653a204c454e4754485f39375f52455155495245440000000000000000006020830152604082019050919050565b6000613f22603083614ff5565b91507f45524331313535237361666542617463685472616e7366657246726f6d3a204960008301527f4e56414c49445f524543495049454e54000000000000000000000000000000006020830152604082019050919050565b6000613f88603083614ff5565b91507f455243313135354d696e744275726e2362617463684275726e3a20494e56414c60008301527f49445f4152524159535f4c454e475448000000000000000000000000000000006020830152604082019050919050565b6000613fee600583615006565b91507f2e6a736f6e0000000000000000000000000000000000000000000000000000006000830152600582019050919050565b600061402e602783614ff5565b91507f455243313135354d6574614d696e744275726e4d6f636b3a20494e56414c494460008301527f5f4d4554484f44000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000614094602c83614ff5565b91507f455243313135352362616c616e63654f6642617463683a20494e56414c49445f60008301527f41525241595f4c454e47544800000000000000000000000000000000000000006020830152604082019050919050565b60006140fa603283614ff5565b91507f455243313135354d657461235f7472616e736665724761734665653a2045524360008301527f32305f5452414e534645525f4641494c454400000000000000000000000000006020830152604082019050919050565b6000614160603383614ff5565b91507f5369676e617475726556616c696461746f7223697356616c69645369676e617460008301527f7572653a20494e56414c49445f5349474e4552000000000000000000000000006020830152604082019050919050565b60006141c6602f83614ff5565b91507f45524331313535237361666542617463685472616e7366657246726f6d3a204960008301527f4e56414c49445f4f50455241544f5200000000000000000000000000000000006020830152604082019050919050565b600061422c604383614ff5565b91507f5369676e617475726556616c696461746f7223697356616c69645369676e617460008301527f7572653a204c454e4754485f475245415445525f5448414e5f305f524551554960208301527f52454400000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b60006142b8603083614ff5565b91507f455243313135354d696e744275726e2362617463684d696e743a20494e56414c60008301527f49445f4152524159535f4c454e475448000000000000000000000000000000006020830152604082019050919050565b600061431e603883614ff5565b91507f455243313135354d657461236d6574615361666542617463685472616e73666560008301527f7246726f6d3a20494e56414c49445f524543495049454e5400000000000000006020830152604082019050919050565b6000614384600083614fd9565b9150600082019050919050565b600061439e603f83614ff5565b91507f45524331313535235f63616c6c6f6e455243313135354261746368526563656960008301527f7665643a20494e56414c49445f4f4e5f524543454956455f4d455353414745006020830152604082019050919050565b6000614404603a83614ff5565b91507f45524331313535235f63616c6c6f6e4552433131353552656365697665643a2060008301527f494e56414c49445f4f4e5f524543454956455f4d4553534147450000000000006020830152604082019050919050565b600061446a603c83614ff5565b91507f4c696242797465732372656164427974657333323a20475245415445525f4f5260008301527f5f455155414c5f544f5f33325f4c454e4754485f5245515549524544000000006020830152604082019050919050565b60006144d0601683614ff5565b91507f536166654d617468236164643a204f564552464c4f57000000000000000000006000830152602082019050919050565b6000614510602f83614ff5565b91507f455243313135354d657461235f7369676e617475726556616c69646174696f6e60008301527f3a20494e56414c49445f4e4f4e434500000000000000000000000000000000006020830152604082019050919050565b6000614576602e83614ff5565b91507f455243313135354d657461235f7472616e736665724761734665653a20554e5360008301527f5550504f525445445f544f4b454e0000000000000000000000000000000000006020830152604082019050919050565b6145d881615097565b82525050565b6145e781615097565b82525050565b6145f681615097565b82525050565b61460d61460882615097565b615130565b82525050565b61461c816150a1565b82525050565b600061462e82846138d9565b915081905092915050565b600061464582866139a5565b915061465182856145fc565b6020820191506146618284613955565b602082019150819050949350505050565b600061467e82866139a5565b915061468a82856145fc565b60208201915061469a82846139a5565b9150819050949350505050565b60006146b38286613a40565b91506146bf8285613955565b6020820191506146cf8284613955565b602082019150819050949350505050565b60006146ec8285613a71565b91506146f88284613a0f565b915061470382613fe1565b91508190509392505050565b600061471a82613b65565b91506147268284613955565b60208201915081905092915050565b600060a08201905061474a600083018861385d565b614757602083018761386c565b8181036040830152614769818661387b565b9050818103606083015261477d818561387b565b90508181036080830152614791818461396c565b90509695505050505050565b600060a0820190506147b2600083018861385d565b6147bf602083018761386c565b6147cc60408301866145de565b6147d960608301856145de565b81810360808301526147eb818461396c565b90509695505050505050565b600060608201905061480c600083018661386c565b614819602083018561386c565b61482660408301846145de565b949350505050565b600060a082019050614843600083018761386c565b614850602083018661386c565b61485d60408301856145de565b61486a60608301846145de565b818103608083015261487b81614377565b905095945050505050565b600060208201905081810360008301526148a0818461387b565b905092915050565b600060408201905081810360008301526148c2818561387b565b905081810360208301526148d6818461387b565b90509392505050565b60006020820190506148f46000830184613937565b92915050565b600060408201905061490f6000830185613946565b61491c602083018461386c565b9392505050565b600060c0820190506149386000830189613946565b614945602083018861386c565b614952604083018761386c565b61495f6060830186613946565b61496c6080830185613946565b61497960a08301846145de565b979650505050505050565b600060a0820190506149996000830188613946565b6149a6602083018761386c565b6149b3604083018661386c565b6149c060608301856145de565b6149cd60808301846145de565b9695505050505050565b600060c0820190506149ec6000830189613946565b6149f9602083018861386c565b614a06604083018761386c565b614a1360608301866145de565b614a2060808301856145de565b614a2d60a08301846145de565b979650505050505050565b6000604082019050614a4d6000830185613946565b8181036020830152614a5f818461396c565b90509392505050565b6000608082019050614a7d6000830187613946565b614a8a6020830186614613565b614a976040830185613946565b614aa46060830184613946565b95945050505050565b60006040820190508181036000830152614ac7818561396c565b90508181036020830152614adb818461396c565b90509392505050565b60006020820190508181036000830152614afe81846139d6565b905092915050565b60006020820190508181036000830152614b1f81613aff565b9050919050565b60006020820190508181036000830152614b3f81613ba5565b9050919050565b60006020820190508181036000830152614b5f81613c0b565b9050919050565b60006020820190508181036000830152614b7f81613c71565b9050919050565b60006020820190508181036000830152614b9f81613cb1565b9050919050565b60006020820190508181036000830152614bbf81613d17565b9050919050565b60006020820190508181036000830152614bdf81613d7d565b9050919050565b60006020820190508181036000830152614bff81613de3565b9050919050565b60006020820190508181036000830152614c1f81613e49565b9050919050565b60006020820190508181036000830152614c3f81613eaf565b9050919050565b60006020820190508181036000830152614c5f81613f15565b9050919050565b60006020820190508181036000830152614c7f81613f7b565b9050919050565b60006020820190508181036000830152614c9f81614021565b9050919050565b60006020820190508181036000830152614cbf81614087565b9050919050565b60006020820190508181036000830152614cdf816140ed565b9050919050565b60006020820190508181036000830152614cff81614153565b9050919050565b60006020820190508181036000830152614d1f816141b9565b9050919050565b60006020820190508181036000830152614d3f8161421f565b9050919050565b60006020820190508181036000830152614d5f816142ab565b9050919050565b60006020820190508181036000830152614d7f81614311565b9050919050565b60006020820190508181036000830152614d9f81614391565b9050919050565b60006020820190508181036000830152614dbf816143f7565b9050919050565b60006020820190508181036000830152614ddf8161445d565b9050919050565b60006020820190508181036000830152614dff816144c3565b9050919050565b60006020820190508181036000830152614e1f81614503565b9050919050565b60006020820190508181036000830152614e3f81614569565b9050919050565b6000602082019050614e5b60008301846145de565b92915050565b6000604082019050614e7660008301856145de565b614e8360208301846145de565b9392505050565b6000604051905081810181811067ffffffffffffffff82111715614ead57600080fd5b8060405250919050565b600067ffffffffffffffff821115614ece57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115614ef657600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115614f1e57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115614f4a57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b600061501c82615077565b9050919050565b600061502e82615077565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006150b9826150c0565b9050919050565b60006150cb826150d2565b9050919050565b60006150dd82615077565b9050919050565b82818337600083830152505050565b60005b838110156151115780820151818401526020810190506150f6565b83811115615120576000848401525b50505050565b6000819050919050565b6000819050919050565b6000601f19601f8301169050919050565b61515481615011565b811461515f57600080fd5b50565b61516b81615023565b811461517657600080fd5b50565b61518281615035565b811461518d57600080fd5b50565b61519981615041565b81146151a457600080fd5b50565b6151b08161504b565b81146151bb57600080fd5b50565b6151c781615097565b81146151d257600080fd5b5056fea365627a7a723158204e429bc3362c1d9cde02fe1f3e194de421b300f795736a19a531758d4ed71c156c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "210:2101:13:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;210:2101:13;;;;;;;",
  "deployedSourceMap": "210:2101:13:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;210:2101:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2253:49;;;;;;;;;;;;;;;;;;;7237:127:20;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;9212:240;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;884:148:22;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;11617:114:21;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2335:522:20;;;;;;;;;;;;;;;;:::i;:::-;;1596:121:13;;;;;;;;;;;;;;;;:::i;:::-;;7652:500:20;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6243:227;;;;;;;;;;;;;;;;:::i;:::-;;5066:1755:21;;;;;;;;;;;;;;;;:::i;:::-;;672:144:13;;;;;;;;;;;;;;;;:::i;:::-;;1941:153;;;;;;;;;;;;;;;;:::i;:::-;;2664:1629:21;;;;;;;;;;;;;;;;:::i;:::-;;1090:176:13;;;;;;;;;;;;;;;;:::i;:::-;;6729:155:20;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1386:556;;;;;;;;;;;;;;;;:::i;:::-;;7715:982:21;;;;;;;;;;;;;;;;:::i;:::-;;2089:3277:29;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7237:127:20;7311:7;7337:8;:16;7346:6;7337:16;;;;;;;;;;;;;;;:21;7354:3;7337:21;;;;;;;;;;;;7330:28;;7237:127;;;;:::o;9212:240::-;9283:4;8435:10;9316:26;;9300:42;;;:12;:42;;;;:98;;;;8979:10;9371:27;;9355:43;;;:12;:43;;;;9300:98;9296:132;;;9416:4;9409:11;;;;9296:132;9441:5;9434:12;;9212:240;;;;:::o;884:148:22:-;931:13;984:15;1001:14;1011:3;1001:9;:14::i;:::-;967:58;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;967:58:22;;;953:73;;884:148;;;:::o;11617:114:21:-;11678:13;11710:6;:15;11717:7;11710:15;;;;;;;;;;;;;;;;11703:22;;11617:114;;;:::o;2335:522:20:-;2530:5;2516:19;;:10;:19;;;2515:60;;;;2540:35;2557:5;2564:10;2540:16;:35::i;:::-;2515:60;2507:120;;;;;;;;;;;;;;;;;;;;;;2657:1;2642:17;;:3;:17;;;;2634:78;;;;;;;;;;;;;;;;;;;;;;2721:50;2744:5;2751:3;2756:4;2762:8;2721:22;:50::i;:::-;2778:73;2806:5;2813:3;2818:4;2824:8;2834:9;2845:5;2778:27;:73::i;:::-;2335:522;;;;;:::o;1596:121:13:-;1680:31;1692:5;1699:3;1704:6;1680:11;:31::i;:::-;1596:121;;;:::o;7652:500:20:-;7751:16;7805:4;:11;7787:7;:14;:29;7779:86;;;;;;;;;;;;;;;;;;;;;;7892:30;7939:7;:14;7925:29;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;7925:29:20;;;;7892:62;;8013:9;8025:1;8013:13;;8008:110;8032:7;:14;8028:1;:18;8008:110;;;8081:8;:20;8090:7;8098:1;8090:10;;;;;;;;;;;;;;8081:20;;;;;;;;;;;;;;;:29;8102:4;8107:1;8102:7;;;;;;;;;;;;;;8081:29;;;;;;;;;;;;8062:13;8076:1;8062:16;;;;;;;;;;;;;:48;;;;;8048:3;;;;;;;8008:110;;;;8133:13;8126:20;;;7652:500;;;;:::o;6243:227::-;6395:9;6360;:21;6370:10;6360:21;;;;;;;;;;;;;;;:32;6382:9;6360:32;;;;;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;6443:9;6416:48;;6431:10;6416:48;;;6454:9;6416:48;;;;;;;;;;;;;;;6243:227;;:::o;5066:1755:21:-;5291:1;5276:17;;:3;:17;;;;5268:86;;;;;;;;;;;;;;;;;;;;;;5384:25;5416:28;;:::i;:::-;5506:23;5532:353;5561:5;5575;9226:66;5610:22;;5643:5;5681:3;5746:4;5729:22;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5729:22:21;;;5719:33;;;;;;5790:8;5773:26;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5773:26:21;;;5763:37;;;;;;5811:9;:35;;5844:1;5811:35;;;5831:1;5811:35;5589:289;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5589:289:21;;;5532:20;:353::i;:::-;5506:379;;5918:50;5941:5;5948:3;5953:4;5959:8;5918:22;:50::i;:::-;6017:9;6013:803;;;6077:10;6066:43;;;;;;;;;;;;;;6037:72;;;;;;;;;;;;;;6529:96;6557:5;6564:3;6569:4;6575:8;6585:10;:27;;;6614:10;6529:27;:96::i;:::-;6671:34;6687:5;6694:10;6671:15;:34::i;:::-;6013:803;;;6730:78;6758:5;6765:3;6770:4;6776:8;6786:9;6797:10;6730:27;:78::i;:::-;6013:803;5066:1755;;;;;;;;;:::o;672:144:13:-;774:36;786:3;791;796:6;804:5;774:11;:36::i;:::-;672:144;;;;:::o;1941:153::-;2050:38;2067:5;2074:4;2080:7;2050:16;:38::i;:::-;1941:153;;;:::o;2664:1629:21:-;2864:1;2849:17;;:3;:17;;;;2841:81;;;;;;;;;;;;;;;;;;;;;;2952:25;2984:28;;:::i;:::-;3074:23;3100:287;3129:5;3143;8992:66;3178:16;;3205:5;3243:3;3281;3295:7;3313:9;:35;;3346:1;3313:35;;;3333:1;3313:35;3157:223;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3157:223:21;;;3100:20;:287::i;:::-;3074:313;;3419:43;3437:5;3444:3;3449;3454:7;3419:17;:43::i;:::-;3510:9;3506:782;;;3570:10;3559:43;;;;;;;;;;;;;;3530:72;;;;;;;;;;;;;;4022:89;4045:5;4052:3;4057;4062:7;4071:10;:27;;;4100:10;4022:22;:89::i;:::-;4150:34;4166:5;4173:10;4150:15;:34::i;:::-;3506:782;;;4209:71;4232:5;4239:3;4244;4249:7;4258:9;4269:10;4209:22;:71::i;:::-;3506:782;2664:1629;;;;;;;;;:::o;1090:176:13:-;1217:43;1234:3;1239:4;1245:7;1254:5;1217:16;:43::i;:::-;1090:176;;;;:::o;6729:155:20:-;6816:15;6850:9;:17;6860:6;6850:17;;;;;;;;;;;;;;;:28;6868:9;6850:28;;;;;;;;;;;;;;;;;;;;;;;;;6843:35;;6729:155;;;;:::o;1386:556::-;1535:5;1521:19;;:10;:19;;;1520:60;;;;1545:35;1562:5;1569:10;1545:16;:35::i;:::-;1520:60;1512:115;;;;;;;;;;;;;;;;;;;;;;1657:1;1642:17;;:3;:17;;;;1634:72;;;;;;;;;;;;;;;;;;;;;;1820:43;1838:5;1845:3;1850;1855:7;1820:17;:43::i;:::-;1870:66;1893:5;1900:3;1905;1910:7;1919:9;1930:5;1870:22;:66::i;:::-;1386:556;;;;;:::o;7715:982:21:-;7934:23;7960:390;7989:6;8004:5;9441:66;8039:22;;8072:6;8140:9;8208;:35;;8241:1;8208:35;;;8228:1;8208:35;8276:9;:35;;8309:1;8276:35;;;8296:1;8276:35;8018:325;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8018:325:21;;;7960:20;:390::i;:::-;7934:416;;8421:9;8390;:17;8400:6;8390:17;;;;;;;;;;;;;;;:28;8408:9;8390:28;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;8486:9;8463:44;;8478:6;8463:44;;;8497:9;8463:44;;;;;;;;;;;;;;;8553:9;8549:143;;;8573:28;;:::i;:::-;8615:10;8604:36;;;;;;;;;;;;;;8573:67;;8649:35;8665:6;8673:10;8649:15;:35::i;:::-;8549:143;;7715:982;;;;;;:::o;2089:3277:29:-;2254:12;2308:1;2294:4;:11;:15;2278:116;;;;;;;;;;;;;;;;;;;;;;2445:3;2419:30;;:14;:30;;;;2403:115;;;;;;;;;;;;;;;;;;;;;;2578:22;2609:18;:4;:16;:18::i;:::-;2603:25;;2578:50;;2716:29;2710:36;;;;;;;;2691:55;;:16;:55;;;2675:147;;;;;;;;;;;;;;;;;;;;;;2862:27;2906:16;2892:31;;;;;;;;;;2862:61;;2978:7;2992:9;3008;3024:17;3374:21;3357:38;;;;;;;;:13;:38;;;;;;;;;3353:1644;;;3406:64;;;;;;;;;;;;;;;;;;;3353:1644;3540:20;3523:37;;;;;;;;:13;:37;;;;;;;;;3519:1478;;;3604:2;3589:4;:11;:17;3571:112;;;;;;;;;;;;;;;;;;;;;;3696:19;3713:1;3696:4;:16;;:19;;;;:::i;:::-;3692:23;;3728:20;3745:2;3728:4;:16;;:20;;;;:::i;:::-;3724:24;;3767:4;3772:2;3767:8;;;;;;;;;;;;;;;;3761:15;;3757:19;;3797:25;3807:5;3814:1;3817;3820;3797:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3797:25:29;;;;;;;;3785:37;;3859:9;3841:27;;:14;:27;;;3831:37;;3884:7;3877:14;;;;;;;;;;3519:1478;3998:21;3981:38;;;;;;;;:13;:38;;;;;;;;;3977:1020;;;4063:2;4048:4;:11;:17;4030:112;;;;;;;;;;;;;;;;;;;;;;4155:19;4172:1;4155:4;:16;;:19;;;;:::i;:::-;4151:23;;4187:20;4204:2;4187:4;:16;;:20;;;;:::i;:::-;4183:24;;4226:4;4231:2;4226:8;;;;;;;;;;;;;;;;4220:15;;4216:19;;4256:135;4339:5;4286:59;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4286:59:29;;;4276:70;;;;;;4357:1;4369;4381;4256:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4256:135:29;;;;;;;;4244:147;;4428:9;4410:27;;:14;:27;;;4400:37;;4453:7;4446:14;;;;;;;;;;3977:1020;4567:25;4550:42;;;;;;;;:13;:42;;;;;;;;;4546:451;;;4650:14;4635:47;;;4683:5;4690:4;4635:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4635:60:29;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4635:60:29;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4635:60:29;;;;;;;;;4613:82;;;733:10;4613:18;;:82;;;;4603:92;;4711:7;4704:14;;;;;;;;;;4546:451;4828:27;4811:44;;;;;;;;:13;:44;;;;;;;;;4807:190;;;4921:14;4906:47;;;4954:5;4961:4;4906:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4906:60:29;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4906:60:29;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4906:60:29;;;;;;;;;4876:90;;;863:10;4876:26;;:90;;;;4866:100;;4982:7;4975:14;;;;;;;;;;4807:190;5292:68;;;;;;;;;;;;;;;;;;;2089:3277;;;;;;;:::o;2144:539:22:-;2198:27;2244:1;2238:2;:7;2234:40;;;2256:10;;;;;;;;;;;;;;;;;;;;;2234:40;2282:9;2294:2;2282:14;;2303:10;2316:2;2303:15;;2325:11;2373:53;2385:1;2380;:6;2373:53;;2397:5;;;;;;;2416:2;2411:7;;;;;;;;;2373:53;;;2434:17;2464:3;2454:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;2454:14:22;;;;2434:34;;2475:9;2493:1;2487:3;:7;2475:19;;2537:87;2550:1;2544:2;:7;2537:87;;2595:2;2590;:7;;;;;;2585:2;:12;2574:25;;2562:4;2567:3;;;;;;;2562:9;;;;;;;;;;;:37;;;;;;;;;;;2614:2;2608:8;;;;;;;;;2537:87;;;2672:4;2658:19;;;;;;;2144:539;;;;:::o;4519:687:20:-;4676:8;:15;4661:4;:11;:30;4653:96;;;;;;;;;;;;;;;;;;;;;;4796:17;4816:4;:11;4796:31;;4873:9;4885:1;4873:13;;4868:247;4892:9;4888:1;:13;4868:247;;;4993:41;5022:8;5031:1;5022:11;;;;;;;;;;;;;;4993:8;:15;5002:5;4993:15;;;;;;;;;;;;;;;:24;5009:4;5014:1;5009:7;;;;;;;;;;;;;;4993:24;;;;;;;;;;;;:28;;:41;;;;:::i;:::-;4966:8;:15;4975:5;4966:15;;;;;;;;;;;;;;;:24;4982:4;4987:1;4982:7;;;;;;;;;;;;;;4966:24;;;;;;;;;;;:68;;;;5068:39;5095:8;5104:1;5095:11;;;;;;;;;;;;;;5068:8;:13;5077:3;5068:13;;;;;;;;;;;;;;;:22;5082:4;5087:1;5082:7;;;;;;;;;;;;;;5068:22;;;;;;;;;;;;:26;;:39;;;;:::i;:::-;5043:8;:13;5052:3;5043:13;;;;;;;;;;;;;;;:22;5057:4;5062:1;5057:7;;;;;;;;;;;;;;5043:22;;;;;;;;;;;:64;;;;4903:3;;;;;;;4868:247;;;;5180:3;5147:53;;5173:5;5147:53;;5161:10;5147:53;;;5185:4;5191:8;5147:53;;;;;;;;;;;;;;;;4519:687;;;;;:::o;5324:510::-;5549:16;:3;:14;;;:16::i;:::-;5545:284;;;5576:13;5614:3;5592:49;;;5646:9;5657:10;5669:5;5676:4;5682:8;5692:5;5592:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5592:106:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5592:106:20;;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5592:106:20;;;;;;;;;5576:122;;693:10;5725:28;;5715:38;;;:6;:38;;;;5707:114;;;;;;;;;;;;;;;;;;;;;;5545:284;;5324:510;;;;;;:::o;2462:265:23:-;2594:33;2619:7;2594:8;:15;2603:5;2594:15;;;;;;;;;;;;;;;:20;2610:3;2594:20;;;;;;;;;;;;:24;;:33;;;;:::i;:::-;2571:8;:15;2580:5;2571:15;;;;;;;;;;;;;;;:20;2587:3;2571:20;;;;;;;;;;;:56;;;;2702:3;2660:61;;2687:5;2660:61;;2675:10;2660:61;;;2708:3;2713:7;2660:61;;;;;;;;;;;;;;;;2462:265;;;:::o;10190:1277:21:-;10325:23;10360:16;10455:8;10444:36;;;;;;;;;;;;;;10424:56;;;;;;;;;;;;;;10544:20;10567:6;:15;10574:7;10567:15;;;;;;;;;;;;;;;;10544:38;;10629:13;10653:19;10669:2;10653:3;:15;;:19;;;;:::i;:::-;10645:28;;10629:44;;10782:12;10773:5;:21;;10772:57;;;;;10824:3;10809:12;:18;10800:5;:28;10772:57;10756:138;;;;;;;;;;;;;;;;;;;;;;10937:12;10952:89;10997:11;11010:5;11027:10;11017:21;;;;;;10980:59;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;10980:59:21;;;10970:70;;;;;;10952:17;:89::i;:::-;10937:104;;11099:21;11140:11;11153:5;11160:10;11123:48;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;11123:48:21;;;11099:72;;11236:1;11228:5;:9;11210:6;:15;11217:7;11210:15;;;;;;;;;;;;;;;:27;;;;11261:7;11249:31;;;11278:1;11270:5;:9;11249:31;;;;;;;;;;;;;;;11335:46;11352:7;11361:4;11367:8;11377:3;11335:16;:46::i;:::-;11327:110;;;;;;;;;;;;;;;;;;;;;;11451:10;11444:17;;;;;;;10190:1277;;;;;:::o;12186:1743::-;12318:21;12348:29;:2;:15;;;:27;:29::i;:::-;12342:36;;12318:60;;12463:19;12457:26;;;;;;;;12439:44;;:15;:44;;;12423:124;;;;;;;;;;;;;;;;;;;;;;12608:25;12649:15;12636:29;;;;;;;;;;12608:57;;12695:20;12722;12749:15;12771:11;12785:2;:9;;;12771:23;;12932:1;12905:29;;:2;:15;;;:29;;;:60;;12950:2;:15;;;12905:60;;;12937:10;12905:60;12890:75;;13023:20;13007:36;;;;;;;;:12;:36;;;;;;;;;13003:921;;;13091:2;:15;;;13080:47;;;;;;;;;;;;;;13054:73;;;;;;;;;;;13215:4;13191:29;;:12;:29;;;13187:467;;;13233:52;13251:5;13258:12;13272:7;13281:3;13233:17;:52::i;:::-;13412:72;13435:5;13442:12;13456:7;13465:9;13476:3;13412:72;;;;;;;;;;;;:22;:72::i;:::-;13187:467;;;13575:12;13566:39;;;13606:5;13613:12;13627:7;13636:3;13566:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13566:78:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13566:78:21;;;;13187:467;13003:921;;;13731:2;:15;;;13720:38;;;;;;;;;;;;;;13705:53;;13792:12;13785:33;;;13819:5;13826:12;13840:3;13785:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13785:59:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13785:59:21;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13785:59:21;;;;;;;;;13767:149;;;;;;;;;;;;;;;;;;;;;;13003:921;12186:1743;;;;;;;;:::o;670:412:23:-;813:31;836:7;813:8;:13;822:3;813:13;;;;;;;;;;;;;;;:18;827:3;813:18;;;;;;;;;;;;:22;;:31;;;;:::i;:::-;792:8;:13;801:3;792:13;;;;;;;;;;;;;;;:18;806:3;792:18;;;;;;;;;;;:52;;;;918:3;877:59;;912:3;877:59;;892:10;877:59;;;923:3;928:7;877:59;;;;;;;;;;;;;;;;1003:73;1034:3;1040;1045;1050:7;1059:9;1070:5;1003:22;:73::i;:::-;670:412;;;;:::o;2989:567::-;3133:13;3149:4;:11;3133:27;;3184:8;:15;3175:5;:24;3167:85;;;;;;;;;;;;;;;;;;;;;;3296:9;3308:1;3296:13;;3291:154;3315:5;3311:1;:9;3291:154;;;3396:41;3425:8;3434:1;3425:11;;;;;;;;;;;;;;3396:8;:15;3405:5;3396:15;;;;;;;;;;;;;;;:24;3412:4;3417:1;3412:7;;;;;;;;;;;;;;3396:24;;;;;;;;;;;;:28;;:41;;;;:::i;:::-;3369:8;:15;3378:5;3369:15;;;;;;;;;;;;;;;:24;3385:4;3390:1;3385:7;;;;;;;;;;;;;;3369:24;;;;;;;;;;;:68;;;;3322:3;;;;;;;3291:154;;;;3529:3;3488:62;;3514:5;3488:62;;3502:10;3488:62;;;3535:4;3541:8;3488:62;;;;;;;;;;;;;;;;2989:567;;;;:::o;3261:376:20:-;3417:33;3442:7;3417:8;:15;3426:5;3417:15;;;;;;;;;;;;;;;:20;3433:3;3417:20;;;;;;;;;;;;:24;;:33;;;;:::i;:::-;3394:8;:15;3403:5;3394:15;;;;;;;;;;;;;;;:20;3410:3;3394:20;;;;;;;;;;;:56;;;;3497:31;3520:7;3497:8;:13;3506:3;3497:13;;;;;;;;;;;;;;;:18;3511:3;3497:18;;;;;;;;;;;;:22;;:31;;;;:::i;:::-;3476:8;:13;3485:3;3476:13;;;;;;;;;;;;;;;:18;3490:3;3476:18;;;;;;;;;;;:52;;;;3613:3;3579:52;;3606:5;3579:52;;3594:10;3579:52;;;3618:3;3623:7;3579:52;;;;;;;;;;;;;;;;3261:376;;;;:::o;3750:463::-;3946:16;:3;:14;;;:16::i;:::-;3942:266;;;3973:13;4011:3;3989:44;;;4038:9;4049:10;4061:5;4068:3;4073:7;4082:5;3989:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3989:99:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3989:99:20;;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3989:99:20;;;;;;;;;3973:115;;622:10;4115:22;;4105:32;;;:6;:32;;;;4097:103;;;;;;;;;;;;;;;;;;;;;;3942:266;;3750:463;;;;;;:::o;1369:735:23:-;1519:8;:15;1504:4;:11;:30;1496:91;;;;;;;;;;;;;;;;;;;;;;1631:13;1647:4;:11;1631:27;;1703:9;1715:1;1703:13;;1698:150;1722:5;1718:1;:9;1698:150;;;1801:39;1828:8;1837:1;1828:11;;;;;;;;;;;;;;1801:8;:13;1810:3;1801:13;;;;;;;;;;;;;;;:22;1815:4;1820:1;1815:7;;;;;;;;;;;;;;1801:22;;;;;;;;;;;;:26;;:39;;;;:::i;:::-;1776:8;:13;1785:3;1776:13;;;;;;;;;;;;;;;:22;1790:4;1795:1;1790:7;;;;;;;;;;;;;;1776:22;;;;;;;;;;;:64;;;;1729:3;;;;;;;1698:150;;;;1931:3;1891:60;;1925:3;1891:60;;1905:10;1891:60;;;1936:4;1942:8;1891:60;;;;;;;;;;;;;;;;2018:80;2054:3;2060;2065:4;2071:8;2081:9;2092:5;2018:27;:80::i;:::-;1369:735;;;;;:::o;1057:415:25:-;1132:13;1184:1;1173;:8;:12;1157:101;;;;;;;;;;;;;;;;;;;;;;1301:1;1314;1303;:8;:12;1301:15;;;;;;;;;;;;;;;;1292:24;;1413:1;1409;1403:8;1399:16;1433:6;1430:1;1423:17;1334:113;1460:6;1453:13;;1057:415;;;:::o;1841:457::-;1946:14;2008:2;2000:5;:10;1988:1;:8;:22;;1972:116;;;;;;;;;;;;;;;;;;;;;;2164:2;2155:11;;;;2259:5;2256:1;2252:13;2246:20;2236:30;;2286:6;2279:13;;1841:457;;;;:::o;1229:163:28:-;1287:7;1316:1;1311;:6;;1303:42;;;;;;;;;;;;;;;;;;;;;;1352:9;1368:1;1364;:5;1352:17;;1385:1;1378:8;;;1229:163;;;;:::o;1472:::-;1530:7;1546:9;1562:1;1558;:5;1546:17;;1583:1;1578;:6;;1570:41;;;;;;;;;;;;;;;;;;;;;;1627:1;1620:8;;;1472:163;;;;:::o;560:405:24:-;621:4;634:16;890:8;878:21;866:33;;927:3;915:15;;:8;:15;;:43;;;;;217:66;946:12;;934:8;:24;;915:43;907:52;;;560:405;;;:::o;1384:352:26:-;1475:14;1553:13;;;;;;;;;;;;;;;;;909:66;1624:25;;1672:4;1599:91;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1599:91:26;;;1577:124;;;;;;1712:10;1526:203;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1526:203:26;;;1508:222;;;;;;1501:229;;1384:352;;;:::o;210:2101:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:134;;226:6;220:13;211:22;;238:33;265:5;238:33;;;205:71;;;;;283:150;;375:6;369:13;360:22;;387:41;422:5;387:41;;;354:79;;;;;458:707;;575:3;568:4;560:6;556:17;552:27;542:2;;593:1;590;583:12;542:2;630:6;617:20;652:80;667:64;724:6;667:64;;;652:80;;;643:89;;749:5;774:6;767:5;760:21;804:4;796:6;792:17;782:27;;826:4;821:3;817:14;810:21;;879:6;926:3;918:4;910:6;906:17;901:3;897:27;894:36;891:2;;;943:1;940;933:12;891:2;968:1;953:206;978:6;975:1;972:13;953:206;;;1036:3;1058:37;1091:3;1079:10;1058:37;;;1053:3;1046:50;1119:4;1114:3;1110:14;1103:21;;1147:4;1142:3;1138:14;1131:21;;1010:149;1000:1;997;993:9;988:14;;953:206;;;957:14;535:630;;;;;;;;1191:707;;1308:3;1301:4;1293:6;1289:17;1285:27;1275:2;;1326:1;1323;1316:12;1275:2;1363:6;1350:20;1385:80;1400:64;1457:6;1400:64;;;1385:80;;;1376:89;;1482:5;1507:6;1500:5;1493:21;1537:4;1529:6;1525:17;1515:27;;1559:4;1554:3;1550:14;1543:21;;1612:6;1659:3;1651:4;1643:6;1639:17;1634:3;1630:27;1627:36;1624:2;;;1676:1;1673;1666:12;1624:2;1701:1;1686:206;1711:6;1708:1;1705:13;1686:206;;;1769:3;1791:37;1824:3;1812:10;1791:37;;;1786:3;1779:50;1852:4;1847:3;1843:14;1836:21;;1880:4;1875:3;1871:14;1864:21;;1743:149;1733:1;1730;1726:9;1721:14;;1686:206;;;1690:14;1268:630;;;;;;;;1906:124;;1983:6;1970:20;1961:29;;1995:30;2019:5;1995:30;;;1955:75;;;;;2037:128;;2118:6;2112:13;2103:22;;2130:30;2154:5;2130:30;;;2097:68;;;;;2172:130;;2252:6;2239:20;2230:29;;2264:33;2291:5;2264:33;;;2224:78;;;;;2309:128;;2388:6;2375:20;2366:29;;2400:32;2426:5;2400:32;;;2360:77;;;;;2444:132;;2527:6;2521:13;2512:22;;2539:32;2565:5;2539:32;;;2506:70;;;;;2584:434;;2692:3;2685:4;2677:6;2673:17;2669:27;2659:2;;2710:1;2707;2700:12;2659:2;2740:6;2734:13;2762:60;2777:44;2814:6;2777:44;;;2762:60;;;2753:69;;2842:6;2835:5;2828:21;2878:4;2870:6;2866:17;2911:4;2904:5;2900:16;2946:3;2937:6;2932:3;2928:16;2925:25;2922:2;;;2963:1;2960;2953:12;2922:2;2973:39;3005:6;3000:3;2995;2973:39;;;2652:366;;;;;;;;3027:440;;3128:3;3121:4;3113:6;3109:17;3105:27;3095:2;;3146:1;3143;3136:12;3095:2;3183:6;3170:20;3205:64;3220:48;3261:6;3220:48;;;3205:64;;;3196:73;;3289:6;3282:5;3275:21;3325:4;3317:6;3313:17;3358:4;3351:5;3347:16;3393:3;3384:6;3379:3;3375:16;3372:25;3369:2;;;3410:1;3407;3400:12;3369:2;3420:41;3454:6;3449:3;3444;3420:41;;;3088:379;;;;;;;;3511:923;;3635:4;3623:9;3618:3;3614:19;3610:30;3607:2;;;3653:1;3650;3643:12;3607:2;3671:20;3686:4;3671:20;;;3662:29;;3743:1;3775:60;3831:3;3822:6;3811:9;3807:22;3775:60;;;3768:4;3761:5;3757:16;3750:86;3701:146;3909:2;3942:60;3998:3;3989:6;3978:9;3974:22;3942:60;;;3935:4;3928:5;3924:16;3917:86;3857:157;4072:2;4105:60;4161:3;4152:6;4141:9;4137:22;4105:60;;;4098:4;4091:5;4087:16;4080:86;4024:153;4256:2;4245:9;4241:18;4235:25;4280:18;4272:6;4269:30;4266:2;;;4312:1;4309;4302:12;4266:2;4347:65;4408:3;4399:6;4388:9;4384:22;4347:65;;;4340:4;4333:5;4329:16;4322:91;4187:237;3601:833;;;;;4441:130;;4521:6;4508:20;4499:29;;4533:33;4560:5;4533:33;;;4493:78;;;;;4578:134;;4662:6;4656:13;4647:22;;4674:33;4701:5;4674:33;;;4641:71;;;;;4719:241;;4823:2;4811:9;4802:7;4798:23;4794:32;4791:2;;;4839:1;4836;4829:12;4791:2;4874:1;4891:53;4936:7;4927:6;4916:9;4912:22;4891:53;;;4881:63;;4853:97;4785:175;;;;;4967:279;;5090:2;5078:9;5069:7;5065:23;5061:32;5058:2;;;5106:1;5103;5096:12;5058:2;5141:1;5158:72;5222:7;5213:6;5202:9;5198:22;5158:72;;;5148:82;;5120:116;5052:194;;;;;5253:415;;;5393:2;5381:9;5372:7;5368:23;5364:32;5361:2;;;5409:1;5406;5399:12;5361:2;5444:1;5461:72;5525:7;5516:6;5505:9;5501:22;5461:72;;;5451:82;;5423:116;5570:2;5588:64;5644:7;5635:6;5624:9;5620:22;5588:64;;;5578:74;;5549:109;5355:313;;;;;;5675:366;;;5796:2;5784:9;5775:7;5771:23;5767:32;5764:2;;;5812:1;5809;5802:12;5764:2;5847:1;5864:53;5909:7;5900:6;5889:9;5885:22;5864:53;;;5854:63;;5826:97;5954:2;5972:53;6017:7;6008:6;5997:9;5993:22;5972:53;;;5962:63;;5933:98;5758:283;;;;;;6048:1239;;;;;;;6293:3;6281:9;6272:7;6268:23;6264:33;6261:2;;;6310:1;6307;6300:12;6261:2;6345:1;6362:53;6407:7;6398:6;6387:9;6383:22;6362:53;;;6352:63;;6324:97;6452:2;6470:53;6515:7;6506:6;6495:9;6491:22;6470:53;;;6460:63;;6431:98;6588:2;6577:9;6573:18;6560:32;6612:18;6604:6;6601:30;6598:2;;;6644:1;6641;6634:12;6598:2;6664:78;6734:7;6725:6;6714:9;6710:22;6664:78;;;6654:88;;6539:209;6807:2;6796:9;6792:18;6779:32;6831:18;6823:6;6820:30;6817:2;;;6863:1;6860;6853:12;6817:2;6883:78;6953:7;6944:6;6933:9;6929:22;6883:78;;;6873:88;;6758:209;6998:3;7017:50;7059:7;7050:6;7039:9;7035:22;7017:50;;;7007:60;;6977:96;7132:3;7121:9;7117:19;7104:33;7157:18;7149:6;7146:30;7143:2;;;7189:1;7186;7179:12;7143:2;7209:62;7263:7;7254:6;7243:9;7239:22;7209:62;;;7199:72;;7083:194;6255:1032;;;;;;;;;7294:1119;;;;;;7525:3;7513:9;7504:7;7500:23;7496:33;7493:2;;;7542:1;7539;7532:12;7493:2;7577:1;7594:53;7639:7;7630:6;7619:9;7615:22;7594:53;;;7584:63;;7556:97;7684:2;7702:53;7747:7;7738:6;7727:9;7723:22;7702:53;;;7692:63;;7663:98;7820:2;7809:9;7805:18;7792:32;7844:18;7836:6;7833:30;7830:2;;;7876:1;7873;7866:12;7830:2;7896:78;7966:7;7957:6;7946:9;7942:22;7896:78;;;7886:88;;7771:209;8039:2;8028:9;8024:18;8011:32;8063:18;8055:6;8052:30;8049:2;;;8095:1;8092;8085:12;8049:2;8115:78;8185:7;8176:6;8165:9;8161:22;8115:78;;;8105:88;;7990:209;8258:3;8247:9;8243:19;8230:33;8283:18;8275:6;8272:30;8269:2;;;8315:1;8312;8305:12;8269:2;8335:62;8389:7;8380:6;8369:9;8365:22;8335:62;;;8325:72;;8209:194;7487:926;;;;;;;;;8420:835;;;;;;8595:3;8583:9;8574:7;8570:23;8566:33;8563:2;;;8612:1;8609;8602:12;8563:2;8647:1;8664:53;8709:7;8700:6;8689:9;8685:22;8664:53;;;8654:63;;8626:97;8754:2;8772:53;8817:7;8808:6;8797:9;8793:22;8772:53;;;8762:63;;8733:98;8862:2;8880:50;8922:7;8913:6;8902:9;8898:22;8880:50;;;8870:60;;8841:95;8967:2;8985:50;9027:7;9018:6;9007:9;9003:22;8985:50;;;8975:60;;8946:95;9100:3;9089:9;9085:19;9072:33;9125:18;9117:6;9114:30;9111:2;;;9157:1;9154;9147:12;9111:2;9177:62;9231:7;9222:6;9211:9;9207:22;9177:62;;;9167:72;;9051:194;8557:698;;;;;;;;;9262:967;;;;;;;9457:3;9445:9;9436:7;9432:23;9428:33;9425:2;;;9474:1;9471;9464:12;9425:2;9509:1;9526:53;9571:7;9562:6;9551:9;9547:22;9526:53;;;9516:63;;9488:97;9616:2;9634:53;9679:7;9670:6;9659:9;9655:22;9634:53;;;9624:63;;9595:98;9724:2;9742:53;9787:7;9778:6;9767:9;9763:22;9742:53;;;9732:63;;9703:98;9832:2;9850:53;9895:7;9886:6;9875:9;9871:22;9850:53;;;9840:63;;9811:98;9940:3;9959:50;10001:7;9992:6;9981:9;9977:22;9959:50;;;9949:60;;9919:96;10074:3;10063:9;10059:19;10046:33;10099:18;10091:6;10088:30;10085:2;;;10131:1;10128;10121:12;10085:2;10151:62;10205:7;10196:6;10185:9;10181:22;10151:62;;;10141:72;;10025:194;9419:810;;;;;;;;;10236:847;;;;;;10417:3;10405:9;10396:7;10392:23;10388:33;10385:2;;;10434:1;10431;10424:12;10385:2;10469:1;10486:53;10531:7;10522:6;10511:9;10507:22;10486:53;;;10476:63;;10448:97;10576:2;10594:53;10639:7;10630:6;10619:9;10615:22;10594:53;;;10584:63;;10555:98;10684:2;10702:53;10747:7;10738:6;10727:9;10723:22;10702:53;;;10692:63;;10663:98;10792:2;10810:53;10855:7;10846:6;10835:9;10831:22;10810:53;;;10800:63;;10771:98;10928:3;10917:9;10913:19;10900:33;10953:18;10945:6;10942:30;10939:2;;;10985:1;10982;10975:12;10939:2;11005:62;11059:7;11050:6;11039:9;11035:22;11005:62;;;10995:72;;10879:194;10379:704;;;;;;;;;11090:763;;;;11278:2;11266:9;11257:7;11253:23;11249:32;11246:2;;;11294:1;11291;11284:12;11246:2;11329:1;11346:53;11391:7;11382:6;11371:9;11367:22;11346:53;;;11336:63;;11308:97;11464:2;11453:9;11449:18;11436:32;11488:18;11480:6;11477:30;11474:2;;;11520:1;11517;11510:12;11474:2;11540:78;11610:7;11601:6;11590:9;11586:22;11540:78;;;11530:88;;11415:209;11683:2;11672:9;11668:18;11655:32;11707:18;11699:6;11696:30;11693:2;;;11739:1;11736;11729:12;11693:2;11759:78;11829:7;11820:6;11809:9;11805:22;11759:78;;;11749:88;;11634:209;11240:613;;;;;;11860:993;;;;;12074:3;12062:9;12053:7;12049:23;12045:33;12042:2;;;12091:1;12088;12081:12;12042:2;12126:1;12143:53;12188:7;12179:6;12168:9;12164:22;12143:53;;;12133:63;;12105:97;12261:2;12250:9;12246:18;12233:32;12285:18;12277:6;12274:30;12271:2;;;12317:1;12314;12307:12;12271:2;12337:78;12407:7;12398:6;12387:9;12383:22;12337:78;;;12327:88;;12212:209;12480:2;12469:9;12465:18;12452:32;12504:18;12496:6;12493:30;12490:2;;;12536:1;12533;12526:12;12490:2;12556:78;12626:7;12617:6;12606:9;12602:22;12556:78;;;12546:88;;12431:209;12699:2;12688:9;12684:18;12671:32;12723:18;12715:6;12712:30;12709:2;;;12755:1;12752;12745:12;12709:2;12775:62;12829:7;12820:6;12809:9;12805:22;12775:62;;;12765:72;;12650:193;12036:817;;;;;;;;12860:360;;;12978:2;12966:9;12957:7;12953:23;12949:32;12946:2;;;12994:1;12991;12984:12;12946:2;13029:1;13046:53;13091:7;13082:6;13071:9;13067:22;13046:53;;;13036:63;;13008:97;13136:2;13154:50;13196:7;13187:6;13176:9;13172:22;13154:50;;;13144:60;;13115:95;12940:280;;;;;;13227:825;;;;;13400:3;13388:9;13379:7;13375:23;13371:33;13368:2;;;13417:1;13414;13407:12;13368:2;13452:1;13469:53;13514:7;13505:6;13494:9;13490:22;13469:53;;;13459:63;;13431:97;13559:2;13577:53;13622:7;13613:6;13602:9;13598:22;13577:53;;;13567:63;;13538:98;13695:2;13684:9;13680:18;13667:32;13719:18;13711:6;13708:30;13705:2;;;13751:1;13748;13741:12;13705:2;13771:62;13825:7;13816:6;13805:9;13801:22;13771:62;;;13761:72;;13646:193;13898:2;13887:9;13883:18;13870:32;13922:18;13914:6;13911:30;13908:2;;;13954:1;13951;13944:12;13908:2;13974:62;14028:7;14019:6;14008:9;14004:22;13974:62;;;13964:72;;13849:193;13362:690;;;;;;;;14059:366;;;14180:2;14168:9;14159:7;14155:23;14151:32;14148:2;;;14196:1;14193;14186:12;14148:2;14231:1;14248:53;14293:7;14284:6;14273:9;14269:22;14248:53;;;14238:63;;14210:97;14338:2;14356:53;14401:7;14392:6;14381:9;14377:22;14356:53;;;14346:63;;14317:98;14142:283;;;;;;14432:491;;;;14570:2;14558:9;14549:7;14545:23;14541:32;14538:2;;;14586:1;14583;14576:12;14538:2;14621:1;14638:53;14683:7;14674:6;14663:9;14659:22;14638:53;;;14628:63;;14600:97;14728:2;14746:53;14791:7;14782:6;14771:9;14767:22;14746:53;;;14736:63;;14707:98;14836:2;14854:53;14899:7;14890:6;14879:9;14875:22;14854:53;;;14844:63;;14815:98;14532:391;;;;;;14930:721;;;;;15094:3;15082:9;15073:7;15069:23;15065:33;15062:2;;;15111:1;15108;15101:12;15062:2;15146:1;15163:53;15208:7;15199:6;15188:9;15184:22;15163:53;;;15153:63;;15125:97;15253:2;15271:53;15316:7;15307:6;15296:9;15292:22;15271:53;;;15261:63;;15232:98;15361:2;15379:53;15424:7;15415:6;15404:9;15400:22;15379:53;;;15369:63;;15340:98;15497:2;15486:9;15482:18;15469:32;15521:18;15513:6;15510:30;15507:2;;;15553:1;15550;15543:12;15507:2;15573:62;15627:7;15618:6;15607:9;15603:22;15573:62;;;15563:72;;15448:193;15056:595;;;;;;;;15658:638;;;15829:2;15817:9;15808:7;15804:23;15800:32;15797:2;;;15845:1;15842;15835:12;15797:2;15908:1;15897:9;15893:17;15880:31;15931:18;15923:6;15920:30;15917:2;;;15963:1;15960;15953:12;15917:2;15983:78;16053:7;16044:6;16033:9;16029:22;15983:78;;;15973:88;;15859:208;16126:2;16115:9;16111:18;16098:32;16150:18;16142:6;16139:30;16136:2;;;16182:1;16179;16172:12;16136:2;16202:78;16272:7;16263:6;16252:9;16248:22;16202:78;;;16192:88;;16077:209;15791:505;;;;;;16303:257;;16415:2;16403:9;16394:7;16390:23;16386:32;16383:2;;;16431:1;16428;16421:12;16383:2;16466:1;16483:61;16536:7;16527:6;16516:9;16512:22;16483:61;;;16473:71;;16445:105;16377:183;;;;;16567:239;;16670:2;16658:9;16649:7;16645:23;16641:32;16638:2;;;16686:1;16683;16676:12;16638:2;16721:1;16738:52;16782:7;16773:6;16762:9;16758:22;16738:52;;;16728:62;;16700:96;16632:174;;;;;16813:261;;16927:2;16915:9;16906:7;16902:23;16898:32;16895:2;;;16943:1;16940;16933:12;16895:2;16978:1;16995:63;17050:7;17041:6;17030:9;17026:22;16995:63;;;16985:73;;16957:107;16889:185;;;;;17081:577;;;17223:2;17211:9;17202:7;17198:23;17194:32;17191:2;;;17239:1;17236;17229:12;17191:2;17295:1;17284:9;17280:17;17274:24;17318:18;17310:6;17307:30;17304:2;;;17350:1;17347;17340:12;17304:2;17370:69;17431:7;17422:6;17411:9;17407:22;17370:69;;;17360:79;;17253:192;17497:2;17486:9;17482:18;17476:25;17521:18;17513:6;17510:30;17507:2;;;17553:1;17550;17543:12;17507:2;17573:69;17634:7;17625:6;17614:9;17610:22;17573:69;;;17563:79;;17455:193;17185:473;;;;;;17665:390;;17804:2;17792:9;17783:7;17779:23;17775:32;17772:2;;;17820:1;17817;17810:12;17772:2;17876:1;17865:9;17861:17;17855:24;17899:18;17891:6;17888:30;17885:2;;;17931:1;17928;17921:12;17885:2;17951:88;18031:7;18022:6;18011:9;18007:22;17951:88;;;17941:98;;17834:211;17766:289;;;;;18062:615;;;18223:2;18211:9;18202:7;18198:23;18194:32;18191:2;;;18239:1;18236;18229:12;18191:2;18295:1;18284:9;18280:17;18274:24;18318:18;18310:6;18307:30;18304:2;;;18350:1;18347;18340:12;18304:2;18370:88;18450:7;18441:6;18430:9;18426:22;18370:88;;;18360:98;;18253:211;18516:2;18505:9;18501:18;18495:25;18540:18;18532:6;18529:30;18526:2;;;18572:1;18569;18562:12;18526:2;18592:69;18653:7;18644:6;18633:9;18629:22;18592:69;;;18582:79;;18474:193;18185:492;;;;;;18684:241;;18788:2;18776:9;18767:7;18763:23;18759:32;18756:2;;;18804:1;18801;18794:12;18756:2;18839:1;18856:53;18901:7;18892:6;18881:9;18877:22;18856:53;;;18846:63;;18818:97;18750:175;;;;;18933:173;;19020:46;19062:3;19054:6;19020:46;;;19095:4;19090:3;19086:14;19072:28;;19013:93;;;;;19115:189;;19210:54;19260:3;19252:6;19210:54;;;19293:4;19288:3;19284:14;19270:28;;19203:101;;;;;19312:142;19403:45;19442:5;19403:45;;;19398:3;19391:58;19385:69;;;19461:113;19544:24;19562:5;19544:24;;;19539:3;19532:37;19526:48;;;19612:690;;19757:54;19805:5;19757:54;;;19824:86;19903:6;19898:3;19824:86;;;19817:93;;19931:56;19981:5;19931:56;;;20007:7;20035:1;20020:260;20045:6;20042:1;20039:13;20020:260;;;20112:6;20106:13;20133:63;20192:3;20177:13;20133:63;;;20126:70;;20213:60;20266:6;20213:60;;;20203:70;;20077:203;20067:1;20064;20060:9;20055:14;;20020:260;;;20024:14;20293:3;20286:10;;19736:566;;;;;;;;20341:734;;20504:54;20552:5;20504:54;;;20571:104;20668:6;20663:3;20571:104;;;20564:111;;20696:56;20746:5;20696:56;;;20772:7;20800:1;20785:268;20810:6;20807:1;20804:13;20785:268;;;20877:6;20871:13;20898:71;20965:3;20950:13;20898:71;;;20891:78;;20986:60;21039:6;20986:60;;;20976:70;;20842:211;20832:1;20829;20825:9;20820:14;;20785:268;;;20789:14;21066:3;21059:10;;20483:592;;;;;;;;21083:104;21160:21;21175:5;21160:21;;;21155:3;21148:34;21142:45;;;21194:113;21277:24;21295:5;21277:24;;;21272:3;21265:37;21259:48;;;21314:152;21415:45;21435:24;21453:5;21435:24;;;21415:45;;;21410:3;21403:58;21397:69;;;21473:343;;21583:38;21615:5;21583:38;;;21633:70;21696:6;21691:3;21633:70;;;21626:77;;21708:52;21753:6;21748:3;21741:4;21734:5;21730:16;21708:52;;;21781:29;21803:6;21781:29;;;21776:3;21772:39;21765:46;;21563:253;;;;;;21823:356;;21951:38;21983:5;21951:38;;;22001:88;22082:6;22077:3;22001:88;;;21994:95;;22094:52;22139:6;22134:3;22127:4;22120:5;22116:16;22094:52;;;22167:6;22162:3;22158:16;22151:23;;21931:248;;;;;;22186:347;;22298:39;22331:5;22298:39;;;22349:71;22413:6;22408:3;22349:71;;;22342:78;;22425:52;22470:6;22465:3;22458:4;22451:5;22447:16;22425:52;;;22498:29;22520:6;22498:29;;;22493:3;22489:39;22482:46;;22278:255;;;;;;22540:360;;22670:39;22703:5;22670:39;;;22721:89;22803:6;22798:3;22721:89;;;22714:96;;22815:52;22860:6;22855:3;22848:4;22841:5;22837:16;22815:52;;;22888:6;22883:3;22879:16;22872:23;;22650:250;;;;;;22907:352;;23033:35;23062:5;23033:35;;;23080:89;23162:6;23157:3;23080:89;;;23073:96;;23174:52;23219:6;23214:3;23207:4;23200:5;23196:16;23174:52;;;23247:6;23242:3;23238:16;23231:23;;23013:246;;;;;;23291:884;;23428:5;23422:12;23462:1;23451:9;23447:17;23475:1;23470:268;;;;23749:1;23744:425;;;;23440:729;;23470:268;23548:4;23544:1;23533:9;23529:17;23525:28;23567:89;23649:6;23644:3;23567:89;;;23560:96;;23694:4;23690:9;23679;23675:25;23670:3;23663:38;23724:6;23719:3;23715:16;23708:23;;23477:261;23470:268;;23744:425;23813:1;23802:9;23798:17;23829:89;23911:6;23906:3;23829:89;;;23822:96;;23940:38;23972:5;23940:38;;;23994:1;24002:130;24016:6;24013:1;24010:13;24002:130;;;24081:7;24075:14;24071:1;24066:3;24062:11;24055:35;24122:1;24113:7;24109:15;24098:26;;24038:4;24035:1;24031:12;24026:17;;24002:130;;;24155:6;24150:3;24146:16;24139:23;;23751:418;;;23440:729;;23398:777;;;;;;24184:380;;24344:67;24408:2;24403:3;24344:67;;;24337:74;;24444:34;24440:1;24435:3;24431:11;24424:55;24513:13;24508:2;24503:3;24499:12;24492:35;24555:2;24550:3;24546:12;24539:19;;24330:234;;;;24573:400;;24751:85;24833:2;24828:3;24751:85;;;24744:92;;24869:66;24865:1;24860:3;24856:11;24849:87;24964:2;24959:3;24955:12;24948:19;;24737:236;;;;24982:392;;25142:67;25206:2;25201:3;25142:67;;;25135:74;;25242:34;25238:1;25233:3;25229:11;25222:55;25311:25;25306:2;25301:3;25297:12;25290:47;25365:2;25360:3;25356:12;25349:19;;25128:246;;;;25383:379;;25543:67;25607:2;25602:3;25543:67;;;25536:74;;25643:34;25639:1;25634:3;25630:11;25623:55;25712:12;25707:2;25702:3;25698:12;25691:34;25753:2;25748:3;25744:12;25737:19;;25529:233;;;;25771:323;;25931:67;25995:2;25990:3;25931:67;;;25924:74;;26031:25;26027:1;26022:3;26018:11;26011:46;26085:2;26080:3;26076:12;26069:19;;25917:177;;;;26103:390;;26263:67;26327:2;26322:3;26263:67;;;26256:74;;26363:34;26359:1;26354:3;26350:11;26343:55;26432:23;26427:2;26422:3;26418:12;26411:45;26484:2;26479:3;26475:12;26468:19;;26249:244;;;;26502:395;;26662:67;26726:2;26721:3;26662:67;;;26655:74;;26762:34;26758:1;26753:3;26749:11;26742:55;26831:28;26826:2;26821:3;26817:12;26810:50;26888:2;26883:3;26879:12;26872:19;;26648:249;;;;26906:388;;27066:67;27130:2;27125:3;27066:67;;;27059:74;;27166:34;27162:1;27157:3;27153:11;27146:55;27235:21;27230:2;27225:3;27221:12;27214:43;27285:2;27280:3;27276:12;27269:19;;27052:242;;;;27303:391;;27463:67;27527:2;27522:3;27463:67;;;27456:74;;27563:34;27559:1;27554:3;27550:11;27543:55;27632:24;27627:2;27622:3;27618:12;27611:46;27685:2;27680:3;27676:12;27669:19;;27449:245;;;;27703:388;;27863:67;27927:2;27922:3;27863:67;;;27856:74;;27963:34;27959:1;27954:3;27950:11;27943:55;28032:21;28027:2;28022:3;28018:12;28011:43;28082:2;28077:3;28073:12;28066:19;;27849:242;;;;28100:392;;28260:67;28324:2;28319:3;28260:67;;;28253:74;;28360:34;28356:1;28351:3;28347:11;28340:55;28429:25;28424:2;28419:3;28415:12;28408:47;28483:2;28478:3;28474:12;28467:19;;28246:246;;;;28501:385;;28661:67;28725:2;28720:3;28661:67;;;28654:74;;28761:34;28757:1;28752:3;28748:11;28741:55;28830:18;28825:2;28820:3;28816:12;28809:40;28877:2;28872:3;28868:12;28861:19;;28647:239;;;;28895:385;;29055:67;29119:2;29114:3;29055:67;;;29048:74;;29155:34;29151:1;29146:3;29142:11;29135:55;29224:18;29219:2;29214:3;29210:12;29203:40;29271:2;29266:3;29262:12;29255:19;;29041:239;;;;29289:339;;29467:84;29549:1;29544:3;29467:84;;;29460:91;;29584:7;29580:1;29575:3;29571:11;29564:28;29620:1;29615:3;29611:11;29604:18;;29453:175;;;;29637:376;;29797:67;29861:2;29856:3;29797:67;;;29790:74;;29897:34;29893:1;29888:3;29884:11;29877:55;29966:9;29961:2;29956:3;29952:12;29945:31;30004:2;29999:3;29995:12;29988:19;;29783:230;;;;30022:381;;30182:67;30246:2;30241:3;30182:67;;;30175:74;;30282:34;30278:1;30273:3;30269:11;30262:55;30351:14;30346:2;30341:3;30337:12;30330:36;30394:2;30389:3;30385:12;30378:19;;30168:235;;;;30412:387;;30572:67;30636:2;30631:3;30572:67;;;30565:74;;30672:34;30668:1;30663:3;30659:11;30652:55;30741:20;30736:2;30731:3;30727:12;30720:42;30790:2;30785:3;30781:12;30774:19;;30558:241;;;;30808:388;;30968:67;31032:2;31027:3;30968:67;;;30961:74;;31068:34;31064:1;31059:3;31055:11;31048:55;31137:21;31132:2;31127:3;31123:12;31116:43;31187:2;31182:3;31178:12;31171:19;;30954:242;;;;31205:384;;31365:67;31429:2;31424:3;31365:67;;;31358:74;;31465:34;31461:1;31456:3;31452:11;31445:55;31534:17;31529:2;31524:3;31520:12;31513:39;31580:2;31575:3;31571:12;31564:19;;31351:238;;;;31598:441;;31758:67;31822:2;31817:3;31758:67;;;31751:74;;31858:34;31854:1;31849:3;31845:11;31838:55;31927:34;31922:2;31917:3;31913:12;31906:56;31996:5;31991:2;31986:3;31982:12;31975:27;32030:2;32025:3;32021:12;32014:19;;31744:295;;;;32048:385;;32208:67;32272:2;32267:3;32208:67;;;32201:74;;32308:34;32304:1;32299:3;32295:11;32288:55;32377:18;32372:2;32367:3;32363:12;32356:40;32424:2;32419:3;32415:12;32408:19;;32194:239;;;;32442:393;;32602:67;32666:2;32661:3;32602:67;;;32595:74;;32702:34;32698:1;32693:3;32689:11;32682:55;32771:26;32766:2;32761:3;32757:12;32750:48;32826:2;32821:3;32817:12;32810:19;;32588:247;;;;32844:260;;33003:65;33066:1;33061:3;33003:65;;;32996:72;;33096:1;33091:3;33087:11;33080:18;;32989:115;;;;33113:400;;33273:67;33337:2;33332:3;33273:67;;;33266:74;;33373:34;33369:1;33364:3;33360:11;33353:55;33442:33;33437:2;33432:3;33428:12;33421:55;33504:2;33499:3;33495:12;33488:19;;33259:254;;;;33522:395;;33682:67;33746:2;33741:3;33682:67;;;33675:74;;33782:34;33778:1;33773:3;33769:11;33762:55;33851:28;33846:2;33841:3;33837:12;33830:50;33908:2;33903:3;33899:12;33892:19;;33668:249;;;;33926:397;;34086:67;34150:2;34145:3;34086:67;;;34079:74;;34186:34;34182:1;34177:3;34173:11;34166:55;34255:30;34250:2;34245:3;34241:12;34234:52;34314:2;34309:3;34305:12;34298:19;;34072:251;;;;34332:322;;34492:67;34556:2;34551:3;34492:67;;;34485:74;;34592:24;34588:1;34583:3;34579:11;34572:45;34645:2;34640:3;34636:12;34629:19;;34478:176;;;;34663:384;;34823:67;34887:2;34882:3;34823:67;;;34816:74;;34923:34;34919:1;34914:3;34910:11;34903:55;34992:17;34987:2;34982:3;34978:12;34971:39;35038:2;35033:3;35029:12;35022:19;;34809:238;;;;35056:383;;35216:67;35280:2;35275:3;35216:67;;;35209:74;;35316:34;35312:1;35307:3;35303:11;35296:55;35385:16;35380:2;35375:3;35371:12;35364:38;35430:2;35425:3;35421:12;35414:19;;35202:237;;;;35447:103;35520:24;35538:5;35520:24;;;35515:3;35508:37;35502:48;;;35557:113;35640:24;35658:5;35640:24;;;35635:3;35628:37;35622:48;;;35677:111;35758:24;35776:5;35758:24;;;35753:3;35746:37;35740:48;;;35795:152;35896:45;35916:24;35934:5;35916:24;;;35896:45;;;35891:3;35884:58;35878:69;;;35954:107;36033:22;36049:5;36033:22;;;36028:3;36021:35;36015:46;;;36068:326;;36244:125;36365:3;36356:6;36244:125;;;36237:132;;36386:3;36379:10;;36225:169;;;;;36401:540;;36601:93;36690:3;36681:6;36601:93;;;36594:100;;36705:75;36776:3;36767:6;36705:75;;;36802:2;36797:3;36793:12;36786:19;;36816:75;36887:3;36878:6;36816:75;;;36913:2;36908:3;36904:12;36897:19;;36933:3;36926:10;;36582:359;;;;;;;36948:558;;37166:93;37255:3;37246:6;37166:93;;;37159:100;;37270:75;37341:3;37332:6;37270:75;;;37367:2;37362:3;37358:12;37351:19;;37388:93;37477:3;37468:6;37388:93;;;37381:100;;37498:3;37491:10;;37147:359;;;;;;;37513:536;;37711:91;37798:3;37789:6;37711:91;;;37704:98;;37813:75;37884:3;37875:6;37813:75;;;37910:2;37905:3;37901:12;37894:19;;37924:75;37995:3;37986:6;37924:75;;;38021:2;38016:3;38012:12;38005:19;;38041:3;38034:10;;37692:357;;;;;;;38056:688;;38348:92;38436:3;38427:6;38348:92;;;38341:99;;38458:95;38549:3;38540:6;38458:95;;;38451:102;;38571:148;38715:3;38571:148;;;38564:155;;38736:3;38729:10;;38329:415;;;;;;38751:511;;38978:148;39122:3;38978:148;;;38971:155;;39137:75;39208:3;39199:6;39137:75;;;39234:2;39229:3;39225:12;39218:19;;39254:3;39247:10;;38959:303;;;;;39269:1055;;39625:3;39614:9;39610:19;39602:27;;39640:79;39716:1;39705:9;39701:17;39692:6;39640:79;;;39730:72;39798:2;39787:9;39783:18;39774:6;39730:72;;;39850:9;39844:4;39840:20;39835:2;39824:9;39820:18;39813:48;39875:108;39978:4;39969:6;39875:108;;;39867:116;;40031:9;40025:4;40021:20;40016:2;40005:9;40001:18;39994:48;40056:108;40159:4;40150:6;40056:108;;;40048:116;;40213:9;40207:4;40203:20;40197:3;40186:9;40182:19;40175:49;40238:76;40309:4;40300:6;40238:76;;;40230:84;;39596:728;;;;;;;;;40331:759;;40587:3;40576:9;40572:19;40564:27;;40602:79;40678:1;40667:9;40663:17;40654:6;40602:79;;;40692:72;40760:2;40749:9;40745:18;40736:6;40692:72;;;40775;40843:2;40832:9;40828:18;40819:6;40775:72;;;40858;40926:2;40915:9;40911:18;40902:6;40858:72;;;40979:9;40973:4;40969:20;40963:3;40952:9;40948:19;40941:49;41004:76;41075:4;41066:6;41004:76;;;40996:84;;40558:532;;;;;;;;;41097:435;;41271:2;41260:9;41256:18;41248:26;;41285:71;41353:1;41342:9;41338:17;41329:6;41285:71;;;41367:72;41435:2;41424:9;41420:18;41411:6;41367:72;;;41450;41518:2;41507:9;41503:18;41494:6;41450:72;;;41242:290;;;;;;;41539:851;;41841:3;41830:9;41826:19;41818:27;;41856:71;41924:1;41913:9;41909:17;41900:6;41856:71;;;41938:72;42006:2;41995:9;41991:18;41982:6;41938:72;;;42021;42089:2;42078:9;42074:18;42065:6;42021:72;;;42104;42172:2;42161:9;42157:18;42148:6;42104:72;;;42225:9;42219:4;42215:20;42209:3;42198:9;42194:19;42187:49;42250:130;42375:4;42250:130;;;42242:138;;41812:578;;;;;;;;42397:361;;42565:2;42554:9;42550:18;42542:26;;42615:9;42609:4;42605:20;42601:1;42590:9;42586:17;42579:47;42640:108;42743:4;42734:6;42640:108;;;42632:116;;42536:222;;;;;42765:620;;43011:2;43000:9;42996:18;42988:26;;43061:9;43055:4;43051:20;43047:1;43036:9;43032:17;43025:47;43086:108;43189:4;43180:6;43086:108;;;43078:116;;43242:9;43236:4;43232:20;43227:2;43216:9;43212:18;43205:48;43267:108;43370:4;43361:6;43267:108;;;43259:116;;42982:403;;;;;;43392:201;;43504:2;43493:9;43489:18;43481:26;;43518:65;43580:1;43569:9;43565:17;43556:6;43518:65;;;43475:118;;;;;43600:324;;43746:2;43735:9;43731:18;43723:26;;43760:71;43828:1;43817:9;43813:17;43804:6;43760:71;;;43842:72;43910:2;43899:9;43895:18;43886:6;43842:72;;;43717:207;;;;;;43931:771;;44189:3;44178:9;44174:19;44166:27;;44204:71;44272:1;44261:9;44257:17;44248:6;44204:71;;;44286:72;44354:2;44343:9;44339:18;44330:6;44286:72;;;44369;44437:2;44426:9;44422:18;44413:6;44369:72;;;44452;44520:2;44509:9;44505:18;44496:6;44452:72;;;44535:73;44603:3;44592:9;44588:19;44579:6;44535:73;;;44619;44687:3;44676:9;44672:19;44663:6;44619:73;;;44160:542;;;;;;;;;;44709:659;;44939:3;44928:9;44924:19;44916:27;;44954:71;45022:1;45011:9;45007:17;44998:6;44954:71;;;45036:72;45104:2;45093:9;45089:18;45080:6;45036:72;;;45119;45187:2;45176:9;45172:18;45163:6;45119:72;;;45202;45270:2;45259:9;45255:18;45246:6;45202:72;;;45285:73;45353:3;45342:9;45338:19;45329:6;45285:73;;;44910:458;;;;;;;;;45375:771;;45633:3;45622:9;45618:19;45610:27;;45648:71;45716:1;45705:9;45701:17;45692:6;45648:71;;;45730:72;45798:2;45787:9;45783:18;45774:6;45730:72;;;45813;45881:2;45870:9;45866:18;45857:6;45813:72;;;45896;45964:2;45953:9;45949:18;45940:6;45896:72;;;45979:73;46047:3;46036:9;46032:19;46023:6;45979:73;;;46063;46131:3;46120:9;46116:19;46107:6;46063:73;;;45604:542;;;;;;;;;;46153:408;;46317:2;46306:9;46302:18;46294:26;;46331:71;46399:1;46388:9;46384:17;46375:6;46331:71;;;46450:9;46444:4;46440:20;46435:2;46424:9;46420:18;46413:48;46475:76;46546:4;46537:6;46475:76;;;46467:84;;46288:273;;;;;;46568:539;;46766:3;46755:9;46751:19;46743:27;;46781:71;46849:1;46838:9;46834:17;46825:6;46781:71;;;46863:68;46927:2;46916:9;46912:18;46903:6;46863:68;;;46942:72;47010:2;46999:9;46995:18;46986:6;46942:72;;;47025;47093:2;47082:9;47078:18;47069:6;47025:72;;;46737:370;;;;;;;;47114:492;;47296:2;47285:9;47281:18;47273:26;;47346:9;47340:4;47336:20;47332:1;47321:9;47317:17;47310:47;47371:76;47442:4;47433:6;47371:76;;;47363:84;;47495:9;47489:4;47485:20;47480:2;47469:9;47465:18;47458:48;47520:76;47591:4;47582:6;47520:76;;;47512:84;;47267:339;;;;;;47613:301;;47751:2;47740:9;47736:18;47728:26;;47801:9;47795:4;47791:20;47787:1;47776:9;47772:17;47765:47;47826:78;47899:4;47890:6;47826:78;;;47818:86;;47722:192;;;;;47921:407;;48112:2;48101:9;48097:18;48089:26;;48162:9;48156:4;48152:20;48148:1;48137:9;48133:17;48126:47;48187:131;48313:4;48187:131;;;48179:139;;48083:245;;;;48335:407;;48526:2;48515:9;48511:18;48503:26;;48576:9;48570:4;48566:20;48562:1;48551:9;48547:17;48540:47;48601:131;48727:4;48601:131;;;48593:139;;48497:245;;;;48749:407;;48940:2;48929:9;48925:18;48917:26;;48990:9;48984:4;48980:20;48976:1;48965:9;48961:17;48954:47;49015:131;49141:4;49015:131;;;49007:139;;48911:245;;;;49163:407;;49354:2;49343:9;49339:18;49331:26;;49404:9;49398:4;49394:20;49390:1;49379:9;49375:17;49368:47;49429:131;49555:4;49429:131;;;49421:139;;49325:245;;;;49577:407;;49768:2;49757:9;49753:18;49745:26;;49818:9;49812:4;49808:20;49804:1;49793:9;49789:17;49782:47;49843:131;49969:4;49843:131;;;49835:139;;49739:245;;;;49991:407;;50182:2;50171:9;50167:18;50159:26;;50232:9;50226:4;50222:20;50218:1;50207:9;50203:17;50196:47;50257:131;50383:4;50257:131;;;50249:139;;50153:245;;;;50405:407;;50596:2;50585:9;50581:18;50573:26;;50646:9;50640:4;50636:20;50632:1;50621:9;50617:17;50610:47;50671:131;50797:4;50671:131;;;50663:139;;50567:245;;;;50819:407;;51010:2;50999:9;50995:18;50987:26;;51060:9;51054:4;51050:20;51046:1;51035:9;51031:17;51024:47;51085:131;51211:4;51085:131;;;51077:139;;50981:245;;;;51233:407;;51424:2;51413:9;51409:18;51401:26;;51474:9;51468:4;51464:20;51460:1;51449:9;51445:17;51438:47;51499:131;51625:4;51499:131;;;51491:139;;51395:245;;;;51647:407;;51838:2;51827:9;51823:18;51815:26;;51888:9;51882:4;51878:20;51874:1;51863:9;51859:17;51852:47;51913:131;52039:4;51913:131;;;51905:139;;51809:245;;;;52061:407;;52252:2;52241:9;52237:18;52229:26;;52302:9;52296:4;52292:20;52288:1;52277:9;52273:17;52266:47;52327:131;52453:4;52327:131;;;52319:139;;52223:245;;;;52475:407;;52666:2;52655:9;52651:18;52643:26;;52716:9;52710:4;52706:20;52702:1;52691:9;52687:17;52680:47;52741:131;52867:4;52741:131;;;52733:139;;52637:245;;;;52889:407;;53080:2;53069:9;53065:18;53057:26;;53130:9;53124:4;53120:20;53116:1;53105:9;53101:17;53094:47;53155:131;53281:4;53155:131;;;53147:139;;53051:245;;;;53303:407;;53494:2;53483:9;53479:18;53471:26;;53544:9;53538:4;53534:20;53530:1;53519:9;53515:17;53508:47;53569:131;53695:4;53569:131;;;53561:139;;53465:245;;;;53717:407;;53908:2;53897:9;53893:18;53885:26;;53958:9;53952:4;53948:20;53944:1;53933:9;53929:17;53922:47;53983:131;54109:4;53983:131;;;53975:139;;53879:245;;;;54131:407;;54322:2;54311:9;54307:18;54299:26;;54372:9;54366:4;54362:20;54358:1;54347:9;54343:17;54336:47;54397:131;54523:4;54397:131;;;54389:139;;54293:245;;;;54545:407;;54736:2;54725:9;54721:18;54713:26;;54786:9;54780:4;54776:20;54772:1;54761:9;54757:17;54750:47;54811:131;54937:4;54811:131;;;54803:139;;54707:245;;;;54959:407;;55150:2;55139:9;55135:18;55127:26;;55200:9;55194:4;55190:20;55186:1;55175:9;55171:17;55164:47;55225:131;55351:4;55225:131;;;55217:139;;55121:245;;;;55373:407;;55564:2;55553:9;55549:18;55541:26;;55614:9;55608:4;55604:20;55600:1;55589:9;55585:17;55578:47;55639:131;55765:4;55639:131;;;55631:139;;55535:245;;;;55787:407;;55978:2;55967:9;55963:18;55955:26;;56028:9;56022:4;56018:20;56014:1;56003:9;55999:17;55992:47;56053:131;56179:4;56053:131;;;56045:139;;55949:245;;;;56201:407;;56392:2;56381:9;56377:18;56369:26;;56442:9;56436:4;56432:20;56428:1;56417:9;56413:17;56406:47;56467:131;56593:4;56467:131;;;56459:139;;56363:245;;;;56615:407;;56806:2;56795:9;56791:18;56783:26;;56856:9;56850:4;56846:20;56842:1;56831:9;56827:17;56820:47;56881:131;57007:4;56881:131;;;56873:139;;56777:245;;;;57029:407;;57220:2;57209:9;57205:18;57197:26;;57270:9;57264:4;57260:20;57256:1;57245:9;57241:17;57234:47;57295:131;57421:4;57295:131;;;57287:139;;57191:245;;;;57443:407;;57634:2;57623:9;57619:18;57611:26;;57684:9;57678:4;57674:20;57670:1;57659:9;57655:17;57648:47;57709:131;57835:4;57709:131;;;57701:139;;57605:245;;;;57857:407;;58048:2;58037:9;58033:18;58025:26;;58098:9;58092:4;58088:20;58084:1;58073:9;58069:17;58062:47;58123:131;58249:4;58123:131;;;58115:139;;58019:245;;;;58271:407;;58462:2;58451:9;58447:18;58439:26;;58512:9;58506:4;58502:20;58498:1;58487:9;58483:17;58476:47;58537:131;58663:4;58537:131;;;58529:139;;58433:245;;;;58685:213;;58803:2;58792:9;58788:18;58780:26;;58817:71;58885:1;58874:9;58870:17;58861:6;58817:71;;;58774:124;;;;;58905:324;;59051:2;59040:9;59036:18;59028:26;;59065:71;59133:1;59122:9;59118:17;59109:6;59065:71;;;59147:72;59215:2;59204:9;59200:18;59191:6;59147:72;;;59022:207;;;;;;59236:256;;59298:2;59292:9;59282:19;;59336:4;59328:6;59324:17;59435:6;59423:10;59420:22;59399:18;59387:10;59384:34;59381:62;59378:2;;;59456:1;59453;59446:12;59378:2;59476:10;59472:2;59465:22;59276:216;;;;;59499:304;;59658:18;59650:6;59647:30;59644:2;;;59690:1;59687;59680:12;59644:2;59725:4;59717:6;59713:17;59705:25;;59788:4;59782;59778:15;59770:23;;59581:222;;;;59810:304;;59969:18;59961:6;59958:30;59955:2;;;60001:1;59998;59991:12;59955:2;60036:4;60028:6;60024:17;60016:25;;60099:4;60093;60089:15;60081:23;;59892:222;;;;60121:317;;60260:18;60252:6;60249:30;60246:2;;;60292:1;60289;60282:12;60246:2;60359:4;60355:9;60348:4;60340:6;60336:17;60332:33;60324:41;;60423:4;60417;60413:15;60405:23;;60183:255;;;;60445:321;;60588:18;60580:6;60577:30;60574:2;;;60620:1;60617;60610:12;60574:2;60687:4;60683:9;60676:4;60668:6;60664:17;60660:33;60652:41;;60751:4;60745;60741:15;60733:23;;60511:255;;;;60773:151;;60859:3;60851:11;;60897:4;60892:3;60888:14;60880:22;;60845:79;;;;60931:158;;60999:3;60991:11;;61036:3;61033:1;61026:14;61068:4;61065:1;61055:18;61047:26;;60985:104;;;;61096:137;;61205:5;61199:12;61189:22;;61170:63;;;;61240:121;;61333:5;61327:12;61317:22;;61298:63;;;;61368:118;;61458:5;61452:12;61442:22;;61423:63;;;;61493:122;;61587:5;61581:12;61571:22;;61552:63;;;;61622:108;;61720:4;61715:3;61711:14;61703:22;;61697:33;;;;61738:178;;61868:6;61863:3;61856:19;61905:4;61900:3;61896:14;61881:29;;61849:67;;;;;61925:160;;62076:3;62061:18;;62054:31;;;;;62094:162;;62208:6;62203:3;62196:19;62245:4;62240:3;62236:14;62221:29;;62189:67;;;;;62265:144;;62400:3;62385:18;;62378:31;;;;;62418:163;;62533:6;62528:3;62521:19;62570:4;62565:3;62561:14;62546:29;;62514:67;;;;;62590:145;;62726:3;62711:18;;62704:31;;;;;62743:91;;62805:24;62823:5;62805:24;;;62794:35;;62788:46;;;;62841:99;;62911:24;62929:5;62911:24;;;62900:35;;62894:46;;;;62947:85;;63020:5;63013:13;63006:21;62995:32;;62989:43;;;;63039:72;;63101:5;63090:16;;63084:27;;;;63118:144;;63190:66;63183:5;63179:78;63168:89;;63162:100;;;;63269:121;;63342:42;63335:5;63331:54;63320:65;;63314:76;;;;63397:72;;63459:5;63448:16;;63442:27;;;;63476:81;;63547:4;63540:5;63536:16;63525:27;;63519:38;;;;63564:129;;63651:37;63682:5;63651:37;;;63638:50;;63632:61;;;;63700:121;;63779:37;63810:5;63779:37;;;63766:50;;63760:61;;;;63828:108;;63907:24;63925:5;63907:24;;;63894:37;;63888:48;;;;63944:145;64025:6;64020:3;64015;64002:30;64081:1;64072:6;64067:3;64063:16;64056:27;63995:94;;;;64098:268;64163:1;64170:101;64184:6;64181:1;64178:13;64170:101;;;64260:1;64255:3;64251:11;64245:18;64241:1;64236:3;64232:11;64225:39;64206:2;64203:1;64199:10;64194:15;;64170:101;;;64286:6;64283:1;64280:13;64277:2;;;64351:1;64342:6;64337:3;64333:16;64326:27;64277:2;64147:219;;;;;64374:74;;64438:5;64427:16;;64421:27;;;;64455:74;;64519:5;64508:16;;64502:27;;;;64536:97;;64624:2;64620:7;64615:2;64608:5;64604:14;64600:28;64590:38;;64584:49;;;;64641:117;64710:24;64728:5;64710:24;;;64703:5;64700:35;64690:2;;64749:1;64746;64739:12;64690:2;64684:74;;64765:133;64842:32;64868:5;64842:32;;;64835:5;64832:43;64822:2;;64889:1;64886;64879:12;64822:2;64816:82;;64905:111;64971:21;64986:5;64971:21;;;64964:5;64961:32;64951:2;;65007:1;65004;64997:12;64951:2;64945:71;;65023:117;65092:24;65110:5;65092:24;;;65085:5;65082:35;65072:2;;65131:1;65128;65121:12;65072:2;65066:74;;65147:115;65215:23;65232:5;65215:23;;;65208:5;65205:34;65195:2;;65253:1;65250;65243:12;65195:2;65189:73;;65269:117;65338:24;65356:5;65338:24;;;65331:5;65328:35;65318:2;;65377:1;65374;65367:12;65318:2;65312:74;",
  "source": "pragma solidity ^0.5.16;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"../tokens/ERC1155/ERC1155Meta.sol\";\r\nimport \"../tokens/ERC1155/ERC1155MintBurn.sol\";\r\nimport \"../tokens/ERC1155/ERC1155Metadata.sol\";\r\n\r\n\r\ncontract ERC1155MetaMintBurnMock is ERC1155Meta, ERC1155MintBurn, ERC1155Metadata {\r\n\r\n  /***********************************|\r\n  |         Minting Functions         |\r\n  |__________________________________*/\r\n\r\n  /**\r\n   * @dev Mint _value of tokens of a given id\r\n   * @param _to The address to mint tokens to.\r\n   * @param _id token id to mint\r\n   * @param _value The amount to be minted\r\n   * @param _data Data to be passed if receiver is contract\r\n   */\r\n  function mintMock(address _to, uint256 _id, uint256 _value, bytes memory _data)\r\n    public\r\n  {\r\n    super._mint(_to, _id, _value, _data);\r\n  }\r\n\r\n  /**\r\n   * @dev Mint tokens for each ids in _ids\r\n   * @param _to The address to mint tokens to.\r\n   * @param _ids Array of ids to mint\r\n   * @param _values Array of amount of tokens to mint per id\r\n   * @param _data Data to be passed if receiver is contract\r\n   */\r\n  function batchMintMock(address _to, uint256[] memory _ids, uint256[] memory _values, bytes memory _data)\r\n    public\r\n  {\r\n    super._batchMint(_to, _ids, _values, _data);\r\n  }\r\n\r\n\r\n  /***********************************|\r\n  |         Burning Functions         |\r\n  |__________________________________*/\r\n\r\n  /**\r\n   * @dev burn _value of tokens of a given token id\r\n   * @param _from The address to burn tokens from.\r\n   * @param _id token id to burn\r\n   * @param _value The amount to be burned\r\n   */\r\n  function burnMock(address _from, uint256 _id, uint256 _value)\r\n    public\r\n  {\r\n    super._burn(_from, _id, _value);\r\n  }\r\n\r\n  /**\r\n   * @dev burn _value of tokens of a given token id\r\n   * @param _from The address to burn tokens from.\r\n   * @param _ids Array of token ids to burn\r\n   * @param _values Array of the amount to be burned\r\n   */\r\n  function batchBurnMock(address _from, uint256[] memory _ids, uint256[] memory _values)\r\n    public\r\n  {\r\n    super._batchBurn(_from, _ids, _values);\r\n  }\r\n\r\n  /***********************************|\r\n  |       Unsupported Functions       |\r\n  |__________________________________*/\r\n\r\n  function () external {\r\n    revert(\"ERC1155MetaMintBurnMock: INVALID_METHOD\");\r\n  }\r\n}",
  "sourcePath": "C:\\Users\\aggar\\ERC1155\\truffle-env\\contracts\\mocks\\ERC1155MetaMintBurnMock.sol",
  "ast": {
    "absolutePath": "/C/Users/aggar/ERC1155/truffle-env/contracts/mocks/ERC1155MetaMintBurnMock.sol",
    "exportedSymbols": {
      "ERC1155MetaMintBurnMock": [
        1507
      ]
    },
    "id": 1508,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1406,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:13"
      },
      {
        "id": 1407,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "26:33:13"
      },
      {
        "absolutePath": "/C/Users/aggar/ERC1155/truffle-env/contracts/tokens/ERC1155/ERC1155Meta.sol",
        "file": "../tokens/ERC1155/ERC1155Meta.sol",
        "id": 1408,
        "nodeType": "ImportDirective",
        "scope": 1508,
        "sourceUnit": 3944,
        "src": "63:43:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/aggar/ERC1155/truffle-env/contracts/tokens/ERC1155/ERC1155MintBurn.sol",
        "file": "../tokens/ERC1155/ERC1155MintBurn.sol",
        "id": 1409,
        "nodeType": "ImportDirective",
        "scope": 1508,
        "sourceUnit": 4358,
        "src": "108:47:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/aggar/ERC1155/truffle-env/contracts/tokens/ERC1155/ERC1155Metadata.sol",
        "file": "../tokens/ERC1155/ERC1155Metadata.sol",
        "id": 1410,
        "nodeType": "ImportDirective",
        "scope": 1508,
        "sourceUnit": 4113,
        "src": "157:47:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1411,
              "name": "ERC1155Meta",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3943,
              "src": "246:11:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155Meta_$3943",
                "typeString": "contract ERC1155Meta"
              }
            },
            "id": 1412,
            "nodeType": "InheritanceSpecifier",
            "src": "246:11:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1413,
              "name": "ERC1155MintBurn",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4357,
              "src": "259:15:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155MintBurn_$4357",
                "typeString": "contract ERC1155MintBurn"
              }
            },
            "id": 1414,
            "nodeType": "InheritanceSpecifier",
            "src": "259:15:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1415,
              "name": "ERC1155Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4112,
              "src": "276:15:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155Metadata_$4112",
                "typeString": "contract ERC1155Metadata"
              }
            },
            "id": 1416,
            "nodeType": "InheritanceSpecifier",
            "src": "276:15:13"
          }
        ],
        "contractDependencies": [
          1151,
          1335,
          3345,
          3943,
          4112,
          4357,
          4479,
          4942
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1507,
        "linearizedBaseContracts": [
          1507,
          4112,
          4357,
          3943,
          4942,
          4479,
          3345,
          1151,
          1335
        ],
        "name": "ERC1155MetaMintBurnMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1436,
              "nodeType": "Block",
              "src": "767:49:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1430,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1418,
                        "src": "786:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1431,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1420,
                        "src": "791:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1432,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1422,
                        "src": "796:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1433,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1424,
                        "src": "804:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1427,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5022,
                        "src": "774:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetaMintBurnMock_$1507",
                          "typeString": "contract super ERC1155MetaMintBurnMock"
                        }
                      },
                      "id": 1429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4167,
                      "src": "774:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 1434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "774:36:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1435,
                  "nodeType": "ExpressionStatement",
                  "src": "774:36:13"
                }
              ]
            },
            "documentation": "@dev Mint _value of tokens of a given id\n@param _to The address to mint tokens to.\n@param _id token id to mint\n@param _value The amount to be minted\n@param _data Data to be passed if receiver is contract",
            "id": 1437,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1418,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1437,
                  "src": "690:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1417,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "690:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1420,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1437,
                  "src": "703:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1419,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "703:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1422,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1437,
                  "src": "716:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1421,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "716:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1424,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 1437,
                  "src": "732:18:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1423,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "732:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "689:62:13"
            },
            "returnParameters": {
              "id": 1426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "767:0:13"
            },
            "scope": 1507,
            "src": "672:144:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1459,
              "nodeType": "Block",
              "src": "1210:56:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1453,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1439,
                        "src": "1234:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1454,
                        "name": "_ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1442,
                        "src": "1239:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1455,
                        "name": "_values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1445,
                        "src": "1245:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1456,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1447,
                        "src": "1254:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1450,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5022,
                        "src": "1217:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetaMintBurnMock_$1507",
                          "typeString": "contract super ERC1155MetaMintBurnMock"
                        }
                      },
                      "id": 1452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_batchMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4251,
                      "src": "1217:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 1457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1217:43:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1458,
                  "nodeType": "ExpressionStatement",
                  "src": "1217:43:13"
                }
              ]
            },
            "documentation": "@dev Mint tokens for each ids in _ids\n@param _to The address to mint tokens to.\n@param _ids Array of ids to mint\n@param _values Array of amount of tokens to mint per id\n@param _data Data to be passed if receiver is contract",
            "id": 1460,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "batchMintMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1439,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1460,
                  "src": "1113:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1113:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1442,
                  "name": "_ids",
                  "nodeType": "VariableDeclaration",
                  "scope": 1460,
                  "src": "1126:21:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1440,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1126:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1441,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1126:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1445,
                  "name": "_values",
                  "nodeType": "VariableDeclaration",
                  "scope": 1460,
                  "src": "1149:24:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1443,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1149:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1444,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1149:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1447,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 1460,
                  "src": "1175:18:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1446,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1175:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1112:82:13"
            },
            "returnParameters": {
              "id": 1449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1210:0:13"
            },
            "scope": 1507,
            "src": "1090:176:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1477,
              "nodeType": "Block",
              "src": "1673:44:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1472,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1462,
                        "src": "1692:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1473,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1464,
                        "src": "1699:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1474,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1466,
                        "src": "1704:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1469,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5022,
                        "src": "1680:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetaMintBurnMock_$1507",
                          "typeString": "contract super ERC1155MetaMintBurnMock"
                        }
                      },
                      "id": 1471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4287,
                      "src": "1680:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1680:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1476,
                  "nodeType": "ExpressionStatement",
                  "src": "1680:31:13"
                }
              ]
            },
            "documentation": "@dev burn _value of tokens of a given token id\n@param _from The address to burn tokens from.\n@param _id token id to burn\n@param _value The amount to be burned",
            "id": 1478,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1462,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1478,
                  "src": "1614:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1461,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1614:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1464,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1478,
                  "src": "1629:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1463,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1629:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1466,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1478,
                  "src": "1642:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1465,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1642:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1613:44:13"
            },
            "returnParameters": {
              "id": 1468,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1673:0:13"
            },
            "scope": 1507,
            "src": "1596:121:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1497,
              "nodeType": "Block",
              "src": "2043:51:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1492,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1480,
                        "src": "2067:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1493,
                        "name": "_ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1483,
                        "src": "2074:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1494,
                        "name": "_values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1486,
                        "src": "2080:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1489,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5022,
                        "src": "2050:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetaMintBurnMock_$1507",
                          "typeString": "contract super ERC1155MetaMintBurnMock"
                        }
                      },
                      "id": 1491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_batchBurn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4356,
                      "src": "2050:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 1495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2050:38:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1496,
                  "nodeType": "ExpressionStatement",
                  "src": "2050:38:13"
                }
              ]
            },
            "documentation": "@dev burn _value of tokens of a given token id\n@param _from The address to burn tokens from.\n@param _ids Array of token ids to burn\n@param _values Array of the amount to be burned",
            "id": 1498,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "batchBurnMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1480,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1498,
                  "src": "1964:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1479,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1964:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1483,
                  "name": "_ids",
                  "nodeType": "VariableDeclaration",
                  "scope": 1498,
                  "src": "1979:21:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1481,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1979:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1482,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1979:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1486,
                  "name": "_values",
                  "nodeType": "VariableDeclaration",
                  "scope": 1498,
                  "src": "2002:24:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1484,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2002:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1485,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2002:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1963:64:13"
            },
            "returnParameters": {
              "id": 1488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2043:0:13"
            },
            "scope": 1507,
            "src": "1941:153:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1505,
              "nodeType": "Block",
              "src": "2246:62:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "455243313135354d6574614d696e744275726e4d6f636b3a20494e56414c49445f4d4554484f44",
                        "id": 1502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2260:41:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a14409389543c5be2d3a34f066f3d8b4d59db7d4a318cfe221527e5c604f065c",
                          "typeString": "literal_string \"ERC1155MetaMintBurnMock: INVALID_METHOD\""
                        },
                        "value": "ERC1155MetaMintBurnMock: INVALID_METHOD"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a14409389543c5be2d3a34f066f3d8b4d59db7d4a318cfe221527e5c604f065c",
                          "typeString": "literal_string \"ERC1155MetaMintBurnMock: INVALID_METHOD\""
                        }
                      ],
                      "id": 1501,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4962,
                        4963
                      ],
                      "referencedDeclaration": 4963,
                      "src": "2253:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 1503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2253:49:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1504,
                  "nodeType": "ExpressionStatement",
                  "src": "2253:49:13"
                }
              ]
            },
            "documentation": "*********************************|\n|       Unsupported Functions       |\n|__________________________________",
            "id": 1506,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2234:2:13"
            },
            "returnParameters": {
              "id": 1500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2246:0:13"
            },
            "scope": 1507,
            "src": "2225:83:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1508,
        "src": "210:2101:13"
      }
    ],
    "src": "0:2311:13"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/aggar/ERC1155/truffle-env/contracts/mocks/ERC1155MetaMintBurnMock.sol",
    "exportedSymbols": {
      "ERC1155MetaMintBurnMock": [
        1507
      ]
    },
    "id": 1508,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1406,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:13"
      },
      {
        "id": 1407,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "26:33:13"
      },
      {
        "absolutePath": "/C/Users/aggar/ERC1155/truffle-env/contracts/tokens/ERC1155/ERC1155Meta.sol",
        "file": "../tokens/ERC1155/ERC1155Meta.sol",
        "id": 1408,
        "nodeType": "ImportDirective",
        "scope": 1508,
        "sourceUnit": 3944,
        "src": "63:43:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/aggar/ERC1155/truffle-env/contracts/tokens/ERC1155/ERC1155MintBurn.sol",
        "file": "../tokens/ERC1155/ERC1155MintBurn.sol",
        "id": 1409,
        "nodeType": "ImportDirective",
        "scope": 1508,
        "sourceUnit": 4358,
        "src": "108:47:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/aggar/ERC1155/truffle-env/contracts/tokens/ERC1155/ERC1155Metadata.sol",
        "file": "../tokens/ERC1155/ERC1155Metadata.sol",
        "id": 1410,
        "nodeType": "ImportDirective",
        "scope": 1508,
        "sourceUnit": 4113,
        "src": "157:47:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1411,
              "name": "ERC1155Meta",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3943,
              "src": "246:11:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155Meta_$3943",
                "typeString": "contract ERC1155Meta"
              }
            },
            "id": 1412,
            "nodeType": "InheritanceSpecifier",
            "src": "246:11:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1413,
              "name": "ERC1155MintBurn",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4357,
              "src": "259:15:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155MintBurn_$4357",
                "typeString": "contract ERC1155MintBurn"
              }
            },
            "id": 1414,
            "nodeType": "InheritanceSpecifier",
            "src": "259:15:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1415,
              "name": "ERC1155Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4112,
              "src": "276:15:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155Metadata_$4112",
                "typeString": "contract ERC1155Metadata"
              }
            },
            "id": 1416,
            "nodeType": "InheritanceSpecifier",
            "src": "276:15:13"
          }
        ],
        "contractDependencies": [
          1151,
          1335,
          3345,
          3943,
          4112,
          4357,
          4479,
          4942
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1507,
        "linearizedBaseContracts": [
          1507,
          4112,
          4357,
          3943,
          4942,
          4479,
          3345,
          1151,
          1335
        ],
        "name": "ERC1155MetaMintBurnMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1436,
              "nodeType": "Block",
              "src": "767:49:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1430,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1418,
                        "src": "786:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1431,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1420,
                        "src": "791:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1432,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1422,
                        "src": "796:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1433,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1424,
                        "src": "804:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1427,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5022,
                        "src": "774:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetaMintBurnMock_$1507",
                          "typeString": "contract super ERC1155MetaMintBurnMock"
                        }
                      },
                      "id": 1429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4167,
                      "src": "774:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 1434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "774:36:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1435,
                  "nodeType": "ExpressionStatement",
                  "src": "774:36:13"
                }
              ]
            },
            "documentation": "@dev Mint _value of tokens of a given id\n@param _to The address to mint tokens to.\n@param _id token id to mint\n@param _value The amount to be minted\n@param _data Data to be passed if receiver is contract",
            "id": 1437,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1418,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1437,
                  "src": "690:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1417,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "690:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1420,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1437,
                  "src": "703:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1419,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "703:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1422,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1437,
                  "src": "716:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1421,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "716:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1424,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 1437,
                  "src": "732:18:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1423,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "732:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "689:62:13"
            },
            "returnParameters": {
              "id": 1426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "767:0:13"
            },
            "scope": 1507,
            "src": "672:144:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1459,
              "nodeType": "Block",
              "src": "1210:56:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1453,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1439,
                        "src": "1234:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1454,
                        "name": "_ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1442,
                        "src": "1239:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1455,
                        "name": "_values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1445,
                        "src": "1245:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1456,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1447,
                        "src": "1254:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1450,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5022,
                        "src": "1217:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetaMintBurnMock_$1507",
                          "typeString": "contract super ERC1155MetaMintBurnMock"
                        }
                      },
                      "id": 1452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_batchMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4251,
                      "src": "1217:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 1457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1217:43:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1458,
                  "nodeType": "ExpressionStatement",
                  "src": "1217:43:13"
                }
              ]
            },
            "documentation": "@dev Mint tokens for each ids in _ids\n@param _to The address to mint tokens to.\n@param _ids Array of ids to mint\n@param _values Array of amount of tokens to mint per id\n@param _data Data to be passed if receiver is contract",
            "id": 1460,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "batchMintMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1439,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1460,
                  "src": "1113:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1113:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1442,
                  "name": "_ids",
                  "nodeType": "VariableDeclaration",
                  "scope": 1460,
                  "src": "1126:21:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1440,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1126:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1441,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1126:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1445,
                  "name": "_values",
                  "nodeType": "VariableDeclaration",
                  "scope": 1460,
                  "src": "1149:24:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1443,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1149:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1444,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1149:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1447,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 1460,
                  "src": "1175:18:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1446,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1175:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1112:82:13"
            },
            "returnParameters": {
              "id": 1449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1210:0:13"
            },
            "scope": 1507,
            "src": "1090:176:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1477,
              "nodeType": "Block",
              "src": "1673:44:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1472,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1462,
                        "src": "1692:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1473,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1464,
                        "src": "1699:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1474,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1466,
                        "src": "1704:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1469,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5022,
                        "src": "1680:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetaMintBurnMock_$1507",
                          "typeString": "contract super ERC1155MetaMintBurnMock"
                        }
                      },
                      "id": 1471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4287,
                      "src": "1680:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1680:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1476,
                  "nodeType": "ExpressionStatement",
                  "src": "1680:31:13"
                }
              ]
            },
            "documentation": "@dev burn _value of tokens of a given token id\n@param _from The address to burn tokens from.\n@param _id token id to burn\n@param _value The amount to be burned",
            "id": 1478,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1462,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1478,
                  "src": "1614:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1461,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1614:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1464,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1478,
                  "src": "1629:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1463,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1629:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1466,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1478,
                  "src": "1642:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1465,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1642:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1613:44:13"
            },
            "returnParameters": {
              "id": 1468,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1673:0:13"
            },
            "scope": 1507,
            "src": "1596:121:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1497,
              "nodeType": "Block",
              "src": "2043:51:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1492,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1480,
                        "src": "2067:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1493,
                        "name": "_ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1483,
                        "src": "2074:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1494,
                        "name": "_values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1486,
                        "src": "2080:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1489,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5022,
                        "src": "2050:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetaMintBurnMock_$1507",
                          "typeString": "contract super ERC1155MetaMintBurnMock"
                        }
                      },
                      "id": 1491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_batchBurn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4356,
                      "src": "2050:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 1495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2050:38:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1496,
                  "nodeType": "ExpressionStatement",
                  "src": "2050:38:13"
                }
              ]
            },
            "documentation": "@dev burn _value of tokens of a given token id\n@param _from The address to burn tokens from.\n@param _ids Array of token ids to burn\n@param _values Array of the amount to be burned",
            "id": 1498,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "batchBurnMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1480,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1498,
                  "src": "1964:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1479,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1964:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1483,
                  "name": "_ids",
                  "nodeType": "VariableDeclaration",
                  "scope": 1498,
                  "src": "1979:21:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1481,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1979:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1482,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1979:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1486,
                  "name": "_values",
                  "nodeType": "VariableDeclaration",
                  "scope": 1498,
                  "src": "2002:24:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1484,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2002:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1485,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2002:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1963:64:13"
            },
            "returnParameters": {
              "id": 1488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2043:0:13"
            },
            "scope": 1507,
            "src": "1941:153:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1505,
              "nodeType": "Block",
              "src": "2246:62:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "455243313135354d6574614d696e744275726e4d6f636b3a20494e56414c49445f4d4554484f44",
                        "id": 1502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2260:41:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a14409389543c5be2d3a34f066f3d8b4d59db7d4a318cfe221527e5c604f065c",
                          "typeString": "literal_string \"ERC1155MetaMintBurnMock: INVALID_METHOD\""
                        },
                        "value": "ERC1155MetaMintBurnMock: INVALID_METHOD"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a14409389543c5be2d3a34f066f3d8b4d59db7d4a318cfe221527e5c604f065c",
                          "typeString": "literal_string \"ERC1155MetaMintBurnMock: INVALID_METHOD\""
                        }
                      ],
                      "id": 1501,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4962,
                        4963
                      ],
                      "referencedDeclaration": 4963,
                      "src": "2253:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 1503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2253:49:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1504,
                  "nodeType": "ExpressionStatement",
                  "src": "2253:49:13"
                }
              ]
            },
            "documentation": "*********************************|\n|       Unsupported Functions       |\n|__________________________________",
            "id": 1506,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2234:2:13"
            },
            "returnParameters": {
              "id": 1500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2246:0:13"
            },
            "scope": 1507,
            "src": "2225:83:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1508,
        "src": "210:2101:13"
      }
    ],
    "src": "0:2311:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-05-19T21:47:00.130Z",
  "devdoc": {
    "methods": {
      "balanceOf(address,uint256)": {
        "params": {
          "_id": "ID of the Token",
          "_owner": "The address of the token holder"
        },
        "return": "The _owner's balance of the Token type requested"
      },
      "balanceOfBatch(address[],uint256[])": {
        "params": {
          "_ids": "ID of the Tokens",
          "_owners": "The addresses of the token holders"
        },
        "return": "The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)"
      },
      "batchBurnMock(address,uint256[],uint256[])": {
        "details": "burn _value of tokens of a given token id",
        "params": {
          "_from": "The address to burn tokens from.",
          "_ids": "Array of token ids to burn",
          "_values": "Array of the amount to be burned"
        }
      },
      "batchMintMock(address,uint256[],uint256[],bytes)": {
        "details": "Mint tokens for each ids in _ids",
        "params": {
          "_data": "Data to be passed if receiver is contract",
          "_ids": "Array of ids to mint",
          "_to": "The address to mint tokens to.",
          "_values": "Array of amount of tokens to mint per id"
        }
      },
      "burnMock(address,uint256,uint256)": {
        "details": "burn _value of tokens of a given token id",
        "params": {
          "_from": "The address to burn tokens from.",
          "_id": "token id to burn",
          "_value": "The amount to be burned"
        }
      },
      "getNonce(address)": {
        "params": {
          "_signer": "Address to query signature nonce for"
        }
      },
      "isApprovedForAll(address,address)": {
        "params": {
          "_operator": "Address of authorized operator",
          "_owner": "The owner of the Tokens"
        },
        "return": "True if the operator is approved, false if not"
      },
      "isValidSignature(address,bytes32,bytes,bytes)": {
        "details": "Verifies that a hash has been signed by the given signer.",
        "params": {
          "_data": "Full EIP-712 data structure that was hashed and signed",
          "_hash": "Hash of the EIP-712 encoded data",
          "_sig": "Proof that the hash has been signed by signer.     For non wallet signatures, _sig is expected to be an array tightly encoded as     (bytes32 r, bytes32 s, uint8 v, uint256 nonce, SignatureType sigType)",
          "_signerAddress": "Address that should have signed the given hash."
        },
        "return": "True if the address recovered from the provided signature matches the input signer address."
      },
      "metaSafeBatchTransferFrom(address,address,uint256[],uint256[],bool,bytes)": {
        "params": {
          "_amounts": "Transfer amounts per token type",
          "_data": "Encodes a meta transfer indicator, signature, gas payment receipt and extra transfer data  _data should be encoded as (  (bytes32 r, bytes32 s, uint8 v, uint256 nonce, SignatureType sigType),  (GasReceipt g, ?bytes transferData) )  i.e. high level encoding should be (bytes, bytes), where the latter bytes array is a nested bytes array",
          "_from": "Source addresses",
          "_ids": "IDs of each token type",
          "_isGasFee": "Whether gas is reimbursed to executor or not",
          "_to": "Target addresses"
        }
      },
      "metaSafeTransferFrom(address,address,uint256,uint256,bool,bytes)": {
        "params": {
          "_amount": "Transfered amount",
          "_data": "Encodes a meta transfer indicator, signature, gas payment receipt and extra transfer data  _data should be encoded as (  (bytes32 r, bytes32 s, uint8 v, uint256 nonce, SignatureType sigType),  (GasReceipt g, ?bytes transferData) )  i.e. high level encoding should be (bytes, bytes), where the latter bytes array is a nested bytes array",
          "_from": "Source address",
          "_id": "ID of the token type",
          "_isGasFee": "Whether gas is reimbursed to executor or not",
          "_to": "Target address"
        }
      },
      "metaSetApprovalForAll(address,address,bool,bool,bytes)": {
        "params": {
          "_approved": "True if the operator is approved, false to revoke approval",
          "_data": "Encodes signature and gas payment receipt  _data should be encoded as (    (bytes32 r, bytes32 s, uint8 v, uint256 nonce, SignatureType sigType),    (GasReceipt g)  )  i.e. high level encoding should be (bytes, bytes), where the latter bytes array is a nested bytes array",
          "_isGasFee": "Whether gas will be reimbursed or not, with vlid signature",
          "_operator": "Address to add to the set of authorized operators",
          "_owner": "Address that wants to set operator status  _spender"
        }
      },
      "mintMock(address,uint256,uint256,bytes)": {
        "details": "Mint _value of tokens of a given id",
        "params": {
          "_data": "Data to be passed if receiver is contract",
          "_id": "token id to mint",
          "_to": "The address to mint tokens to.",
          "_value": "The amount to be minted"
        }
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "params": {
          "_amounts": "Transfer amounts per token type",
          "_data": "Additional data with no specified format, sent in call to `_to`",
          "_from": "Source addresses",
          "_ids": "IDs of each token type",
          "_to": "Target addresses"
        }
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "params": {
          "_amount": "Transfered amount",
          "_data": "Additional data with no specified format, sent in call to `_to`",
          "_from": "Source address",
          "_id": "ID of the token type",
          "_to": "Target address"
        }
      },
      "setApprovalForAll(address,bool)": {
        "params": {
          "_approved": "True if the operator is approved, false to revoke approval",
          "_operator": "Address to add to the set of authorized operators"
        }
      },
      "supportsInterface(bytes4)": {
        "params": {
          "_interfaceID": "The interface identifier, as specified in ERC-165"
        },
        "return": "`true` if the contract implements `_interfaceID` and"
      },
      "uri(uint256)": {
        "details": "URIs are defined in RFC 3986.     URIs are assumed to be deterministically generated based on token ID     Token IDs are assumed to be represented in their hex format in URIs",
        "return": "URI string"
      }
    }
  },
  "userdoc": {
    "methods": {
      "balanceOf(address,uint256)": {
        "notice": "Get the balance of an account's Tokens"
      },
      "balanceOfBatch(address[],uint256[])": {
        "notice": "Get the balance of multiple account/token pairs"
      },
      "getNonce(address)": {
        "notice": "Returns the current nonce associated with a given address"
      },
      "isApprovedForAll(address,address)": {
        "notice": "Queries the approval status of an operator for a given owner"
      },
      "metaSafeBatchTransferFrom(address,address,uint256[],uint256[],bool,bytes)": {
        "notice": "Allows anyone with a valid signature to transfer multiple types of tokens on the bahalf of _from"
      },
      "metaSafeTransferFrom(address,address,uint256,uint256,bool,bytes)": {
        "notice": "Allows anyone with a valid signature to transfer _amount amount of a token _id on the bahalf of _from"
      },
      "metaSetApprovalForAll(address,address,bool,bool,bytes)": {
        "notice": "Approve the passed address to spend on behalf of _from if valid signature is provided"
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "notice": "Send multiple types of Tokens from the _from address to the _to address (with safety call)"
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "notice": "Transfers amount amount of an _id from the _from address to the _to address specified"
      },
      "setApprovalForAll(address,bool)": {
        "notice": "Enable or disable approval for a third party (\"operator\") to manage all of caller's tokens"
      },
      "supportsInterface(bytes4)": {
        "notice": "Query if a contract implements an interface"
      },
      "uri(uint256)": {
        "notice": "A distinct Uniform Resource Identifier (URI) for a given token."
      }
    }
  }
}